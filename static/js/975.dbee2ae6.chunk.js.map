{"version":3,"file":"static/js/975.dbee2ae6.chunk.js","mappings":"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","sources":["components/CenterFlexBox/CenterFlexBox.js","components/MobileLinkToSecondPage/MobileLinkToSecondPage.js","redux/training/trainingSelectors.js","helpers/convertMs.js","components/TrainingTitle/TrainingTitle.js","components/SelectBooks/SelectBooks.styled.js","components/SelectBooks/SelectBooks.js","components/TrainingDataSelection/TrainingDataSelection.style.js","components/TrainingDataSelection/TrainingDataSelection.js","components/MyGoal/MyGoal.styled.js","components/MyGoal/MyGoal.js","components/TimerItem/TimerItem.styled.js","components/TimerItem/TimerItem.js","components/Timer/Timer.styled.js","components/Timer/Timer.js","validSchemas/readingResultSchema.js","components/SendForm/SendForm.styled.js","components/SendForm/SendForm.js","webpack://book-reader-front-end/./src/components/StatisticsList/statisticsList.module.css?2ed4","components/StatisticsList/StatisticsRow.js","helpers/formatDate.js","components/StatisticsList/StatisticsList.js","components/ReadingInformation/ReadingInformation.styled.js","components/ReadingInformation/ReadingInformation.js","components/TrainingContainer/TrainingContainer.js","components/SiteBar/SiteBar.js","pages/Training.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CenterFlexBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  /* justify-content: center; */\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaArrowLeft } from 'react-icons/fa';\n\nconst StyledLink = styled(Link)`\n  color: ${p => p.theme.colors.accentColor};\n  display: block;\n  margin-top: 40px;\n  align-self: start;\n  margin-left: 16px;\n`;\n\nexport const MobileLinkToSecondPage = ({ to }) => {\n  return (\n    <StyledLink to={to}>\n      <FaArrowLeft />\n    </StyledLink>\n  );\n};\n","export const booksList = state => state.training.books;\nexport const startDate = state => state.training.startDate;\nexport const finishDate = state => state.training.finishDate;\nexport const results = state => state.training.results;\n","export function convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  //  Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n","import styled from 'styled-components';\n\nconst StyledTitle = styled.h2`\n  width: 100%;\n  height: 60px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: ${p => p.theme.lineHeights.secondBody};\n\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.backgroundTitle};\n  box-shadow: 0px 2px 3px rgba(9, 30, 63, 0.1);\n\n  @media ${p => p.theme.media.desktop} {\n    /* width: 288px !important; */\n  }\n`;\nexport const TrainingTitle = ({ text }) => {\n  return <StyledTitle>{text}</StyledTitle>;\n};\n","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n\n  @media ${p => p.theme.media.tablet} {\n    flex-direction: row;\n    align-items: flex-start;\n    justify-content: space-between;\n  }\n\n  select {\n    display: block;\n    width: 100%;\n    height: 40px;\n    padding: 2px 32px 2px 12px;\n    background-color: ${p => p.theme.colors.white};\n    outline: none;\n    border: none;\n    color: ${p => p.theme.colors.deepBlue};\n\n    @media ${p => p.theme.media.tablet} {\n      width: 483px;\n    }\n    @media ${p => p.theme.media.desktop} {\n      width: 715px;\n    }\n  }\n`;\nexport const Wrapper = styled.div`\n  width: 100%;\n\n  @media ${p => p.theme.media.tablet} {\n    width: 483px;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    width: 715px;\n  }\n`;\n","import { useTranslation } from 'react-i18next';\nimport { selectedDatesActions } from 'redux/selectedDates';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { booksSelectors } from 'redux/books';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Button } from 'components/StyledButton/StyledButton ';\nimport { ErrorContainer } from 'components/ErrorContainer/ErrorContainer.styled';\n\nimport { StyledForm, Wrapper } from './SelectBooks.styled';\n\nconst initialValues = {\n  book: '',\n};\nconst validationSchema = Yup.object({\n  book: Yup.string().required('Please select a book'),\n});\n\nexport const SelectBooks = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const booksList = useSelector(booksSelectors.getBooks);\n  // const selectedBooks = useSelector(state => state.selectedDates.list);\n  const books = booksList.filter(book => book.status === 'toRead');\n\n  const defaultValue = t('chooseBooks');\n\n  const onSubmit = (val, { resetForm }) => {\n    // const isBookAlreadySelected = selectedBooks.some(({ _id }) => _id === book);\n    // if (isBookAlreadySelected) {\n    //   throw Error('This book already selected');\n    // }\n    const newBook = books.find(book => book._id === val.book);\n\n    resetForm();\n    dispatch(selectedDatesActions.addBook(newBook));\n  };\n\n  return (\n    <Formik\n      onSubmit={onSubmit}\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n    >\n      <StyledForm>\n        <Wrapper>\n          <Field name=\"book\" as=\"select\">\n            <option value=\"\" hidden disabled>\n              {defaultValue}\n            </option>\n            {books.map(book => (\n              <option value={book._id} key={book._id}>\n                {book.title}\n              </option>\n            ))}\n          </Field>\n          <ErrorContainer>\n            {/* {isBookAlreadySelected && <p>This book already selected</p>} */}\n            <ErrorMessage name=\"book\" />\n          </ErrorContainer>\n        </Wrapper>\n\n        <Button size={170} textContent={t('btnAdd')} type=\"submit\" />\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TrainingWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: 14px;\n  line-height: 1.21;\n  gap: 20px;\n  padding: ${p => p.theme.space[5]}px;\n\n  @media ${p => p.theme.media.tablet} {\n    gap: 24px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    width: 928px;\n    gap: 32px;\n    padding: 0;\n  }\n`;\n\nexport const StyledControlsWrapper = styled.div`\n  input {\n    display: block;\n    width: 100%;\n    height: 40px;\n    padding: 2px 31px 2px 40px !important;\n    background-color: ${p => p.theme.colors.backgroundBody};\n    border: 1px solid #a6abb9;\n    margin-bottom: 20px;\n    @media screen and (min-width: 768px) {\n      width: 250px;\n      margin: 0;\n    }\n  }\n  div {\n    z-index: 10;\n  }\n  svg {\n    z-index: 5;\n    padding: 0 !important;\n    position: absolute;\n    top: 12px;\n    left: 12px;\n    width: 17px;\n    height: 17px;\n    fill: ${p => p.theme.colors.iconColor};\n  }\n\n  @media ${p => p.theme.media.tablet} {\n    display: flex;\n    gap: 40px;\n    align-self: flex-start;\n  }\n  @media ${p => p.theme.media.desktop} {\n    align-self: center;\n    gap: 40px;\n  }\n`;\n\nexport const TrainingContainer = styled.div`\n  min-width: 320px;\n  margin-left: auto;\n  margin-right: auto;\n  /* padding: 32px 20px; */\n  background-color: #f6f7fb;\n  @media screen and (min-width: 768px) {\n    min-width: 768px;\n    padding: 40px 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n`;\n\nexport const TrainingMaine = styled.div`\n  @media screen and (min-width: 1280px) {\n    width: 928px;\n  }\n`;\n\nexport const TrainingSidebar = styled.div`\n  @media screen and (min-width: 1280px) {\n    width: 288px;\n  }\n`;\n","import DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport { selectedDatesActions } from 'redux/selectedDates';\n\nimport { TrainingTitle } from 'components/TrainingTitle/TrainingTitle';\nimport { SelectBooks } from 'components/SelectBooks/SelectBooks';\nimport {\n  StyledControlsWrapper,\n  TrainingWrapper,\n} from './TrainingDataSelection.style';\n\nexport const TrainingDataSelection = () => {\n  const { t } = useTranslation();\n  const start = useSelector(state => state.selectedDates.startDate);\n  const end = useSelector(state => state.selectedDates.endDate);\n  const [startDate, setStartDate] = useState(start);\n  const [endDate, setEndDate] = useState(end);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const data = startDate.valueOf();\n\n    dispatch(selectedDatesActions.startDate(data));\n  }, [dispatch, startDate]);\n\n  useEffect(() => {\n    const data = endDate.valueOf();\n\n    dispatch(selectedDatesActions.endDate(data));\n  }, [dispatch, endDate]);\n\n  return (\n    <>\n      <TrainingWrapper>\n        <TrainingTitle text={t('myTraining')} />\n        <StyledControlsWrapper>\n          <DatePicker\n            showIcon\n            selected={start}\n            onChange={date => setStartDate(date)}\n            closeOnScroll={true}\n            dateFormat=\"MMMM d, yyyy h:mm aa\"\n            selectsStart\n            minDate={Date.now()}\n            showDisabledMonthNavigation\n            placeholderText={t('start')}\n          />\n\n          <DatePicker\n            showIcon\n            selected={end}\n            onChange={date => setEndDate(date)}\n            closeOnScroll={true}\n            dateFormat=\"MMMM d, yyyy h:mm aa\"\n            selectsEnd\n            minDate={startDate}\n            showDisabledMonthNavigation\n            placeholderText={t('finish')}\n          />\n        </StyledControlsWrapper>\n        <SelectBooks />\n      </TrainingWrapper>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MyGoalMainBox = styled.div`\n  width: 100%;\n  background-color: white;\n  box-shadow: 0px 2px 3px rgba(9, 30, 63, 0.1);\n\n  @media ${p => p.theme.media.tablet} {\n    padding-left: ${p => p.theme.space[5]}px;\n    padding-right: ${p => p.theme.space[5]}px;\n\n    /* height: 105px; */\n    display: flex;\n    /* align-items: center; */\n    align-items: baseline;\n\n    h2 {\n      width: 275px;\n    }\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    padding-left: 0;\n    padding-right: 0;\n    /* width: 288px; */\n    width: 100%;\n    /* height: 304px; */\n    display: block;\n    h2 {\n      width: 288px;\n    }\n  }\n`;\n\nexport const StatsBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: ${p => (p.isTrainingStarted ? 161 : 236)}px;\n  background-color: white;\n  box-shadow: 0px 2px 3px rgba(9, 30, 63, 0.1);\n\n  @media ${p => p.theme.media.tablet} {\n    height: 105px;\n    box-shadow: none;\n    margin-left: auto;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    height: ${p => (p.isTrainingStarted ? 269 : 244)}px;\n  }\n`;\n\nexport const MyGoalStatsList = styled.ul`\n  display: flex;\n  justify-content: center;\n\n  width: 100%;\n  gap: 20px;\n  padding: ${p => p.theme.space[5]}px;\n\n  @media ${p => p.theme.media.tablet} {\n    align-items: baseline;\n    gap: ${p => (p.isTrainingStarted ? 12 : 40)}px;\n    padding: 0;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    gap: 20px;\n    margin: 0;\n  }\n`;\n\nexport const MyGoalStatsListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media ${p => p.theme.media.tablet} {\n    height: 60px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    height: 148px;\n    width: ${p => p.isTrainingStarted && 70}px;\n  }\n`;\n\nexport const MyGoalStatsDigitBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: ${p => (p.isTrainingStarted ? 66 : 100)}px;\n  height: ${p => (p.isTrainingStarted ? 66 : 100)}px;\n  background: ${p => p.theme.colors.backgroundStatistic};\n  box-shadow: 4px 4px 8px rgba(36, 42, 55, 0.15);\n\n  font-family: Open Sans;\n  font-weight: 700;\n  font-size: ${p => p.theme.fontSizes.xxl};\n  line-height: 1.18;\n  text-align: center;\n  color: ${p => {\n    // console.log(p.booksLeft);\n    return p.param === 'booksLeft'\n      ? `${p.theme.colors.accentColor}`\n      : `${p.theme.colors.statisticColor}`;\n  }};\n\n  @media ${p => p.theme.media.tablet} {\n    font-size: ${p => p.theme.fontSizes.xl};\n    width: 100px;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    width: ${p => (p.isTrainingStarted ? 66 : 100)}px;\n    height: ${p => (p.isTrainingStarted ? 66 : 100)}px;\n  }\n`;\n\nexport const MyGoalStatsText = styled.span`\n  width: 100%;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p =>\n    p.isTrainingStarted ? `${p.theme.fontSizes.xs}` : `${p.theme.fontSizes.s}`};\n  line-height: ${p => p.theme.lineHeights.secondBody};\n  text-align: center;\n  color: ${p => p.theme.colors.notActiveText};\n\n  display: flex;\n  justify-content: center;\n  margin-top: 14px;\n\n  @media ${p => p.theme.media.tablet} {\n    max-width: 100px;\n    font-size: ${p => p.theme.fontSizes.ss};\n    margin-top: 0;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    font-size: ${p =>\n      p.isTrainingStarted\n        ? `${p.theme.fontSizes.xs}`\n        : `${p.theme.fontSizes.s}`};\n    margin-top: 14px;\n  }\n`;\n","import { useTranslation } from 'react-i18next';\n\nimport { TrainingTitle } from 'components/TrainingTitle/TrainingTitle';\nimport {\n  MyGoalMainBox,\n  StatsBox,\n  MyGoalStatsList,\n  MyGoalStatsListItem,\n  MyGoalStatsDigitBox,\n  MyGoalStatsText,\n} from './MyGoal.styled';\n\nexport const MyGoal = ({ trainingStarted, statistic }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <MyGoalMainBox>\n        <TrainingTitle text={t('myGoals')} />\n\n        <StatsBox isTrainingStarted={trainingStarted}>\n          <MyGoalStatsList isTrainingStarted={trainingStarted}>\n            {statistic.map(({ param, text, amount }) => (\n              <MyGoalStatsListItem\n                key={param}\n                isTrainingStarted={trainingStarted}\n              >\n                <MyGoalStatsDigitBox\n                  param={param}\n                  isTrainingStarted={trainingStarted}\n                >\n                  {amount}\n                </MyGoalStatsDigitBox>\n                <MyGoalStatsText isTrainingStarted={trainingStarted}>\n                  {text}\n                </MyGoalStatsText>\n              </MyGoalStatsListItem>\n            ))}\n          </MyGoalStatsList>\n        </StatsBox>\n      </MyGoalMainBox>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledTimerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  @media ${p => p.theme.media.tablet} {\n    width: 290px;\n  }\n`;\n\nexport const TimerTitle = styled.div`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.21;\n  color: #898f9f;\n  margin-bottom: 8px;\n`;\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  align-items: start;\n  justify-content: center;\n  width: 100%;\n  height: 60px;\n\n  background: #ffffff;\n  box-shadow: 4px 4px 8px rgba(36, 42, 55, 0.15);\n  padding-bottom: 8px;\n`;\nexport const StyledItem = styled.p`\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  text-align: center;\n  width: 43px;\n\n  :not(:last-child) {\n    margin-right: 8px;\n  }\n`;\n\nexport const StyledValue = styled.span`\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 25px;\n  line-height: 1.52;\n\n  color: #091e3f;\n`;\nexport const StyledSeparator = styled.span`\n  font-weight: 700;\n  font-size: 25px;\n  line-height: 1.52;\n  margin-right: 8px;\n`;\n\nexport const StyledSpan = styled.span`\n  font-weight: 500;\n  font-size: 10px;\n  line-height: 12px;\n  text-align: center;\n\n  color: #898f9f;\n`;\n","import { useTranslation } from 'react-i18next';\n\nimport {\n  StyledContainer,\n  StyledItem,\n  StyledValue,\n  StyledTimerWrapper,\n  TimerTitle,\n  StyledSpan,\n  StyledSeparator,\n} from './TimerItem.styled.js';\nimport { useState, useEffect, useRef } from 'react';\nimport { convertMs } from 'helpers/convertMs.js';\n\nexport const TimerItem = ({ selectedDate, timerTitle }) => {\n  const [time, setTime] = useState(() => Date.now());\n  const { t } = useTranslation();\n  const intervalId = useRef(null);\n  const deltaTime = selectedDate - time;\n  const timeLeft = convertMs(deltaTime);\n\n  useEffect(() => {\n    if (intervalId.current === null) {\n      intervalId.current = setInterval(() => {\n        setTime(Date.now());\n      }, 1000);\n      return;\n    }\n    return clearInterval(intervalId);\n  }, []);\n\n  return (\n    <StyledTimerWrapper>\n      <TimerTitle>{timerTitle} </TimerTitle>\n      <StyledContainer>\n        <StyledItem>\n          <StyledValue>{timeLeft.days}</StyledValue>\n          <StyledSpan>{t('days')}</StyledSpan>\n        </StyledItem>\n\n        <StyledSeparator>:</StyledSeparator>\n\n        <StyledItem>\n          <StyledValue>{timeLeft.hours}</StyledValue>\n          <StyledSpan>{t('hrs')}</StyledSpan>\n        </StyledItem>\n\n        <StyledSeparator>:</StyledSeparator>\n\n        <StyledItem>\n          <StyledValue>{timeLeft.minutes}</StyledValue>\n          <StyledSpan>{t('mins')}</StyledSpan>\n        </StyledItem>\n        <StyledSeparator>:</StyledSeparator>\n\n        <StyledItem>\n          <StyledValue>{timeLeft.seconds}</StyledValue>\n          <StyledSpan>{t('secs')}</StyledSpan>\n        </StyledItem>\n      </StyledContainer>\n    </StyledTimerWrapper>\n  );\n};\n","import styled from 'styled-components';\nexport const TimerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  width: 100%;\n  @media ${p => p.theme.media.tablet} {\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 32px;\n    width: auto;\n  }\n  @media ${p => p.theme.media.desktop} {\n    gap: 74px;\n    align-items: start;\n  }\n`;\n","import { useTranslation } from 'react-i18next';\n\nimport { TimerItem } from 'components/TimerItem/TimerItem';\n\nimport { TimerWrapper } from './Timer.styled';\n\nexport const Timer = ({ endDate }) => {\n  const { t } = useTranslation();\n  const today = new Date();\n  const currentYear = today.getFullYear();\n\n  const endYear = new Date(`${currentYear}`, 12, 0);\n\n  return (\n    <TimerWrapper>\n      <TimerItem selectedDate={endYear} timerTitle={t('yearsCountdown')} />\n      <TimerItem selectedDate={endDate} timerTitle={t('goalsCountdown')} />\n    </TimerWrapper>\n  );\n};\n","import * as Yup from 'yup';\n\nconst now = new Date();\nconst today = Date.parse(now) + 3600 * 1000;\nexport const readingResultSchema = Yup.object().shape({\n  dateInput: Yup.date()\n    // .min(new Date(yesterday), t('results_err1'))\n    .max(\n      new Date(today)\n      // , t('results_err2')\n    ),\n  pageInput: Yup.number()\n    .integer\n    //   t('results_err4')\n    ()\n    .min(\n      1\n      //   t('results_err3')\n    )\n    .max(\n      999\n      //   t('results_err5')\n    )\n    .required\n    // t('results_err6')\n    (),\n});\n","import styled from 'styled-components';\nimport DateView from 'react-datepicker';\nimport { Form } from 'formik';\n\nexport const StyledDateView = styled(DateView)`\n  height: 42px;\n  width: 110px;\n  background-color: #f6f7fb;\n  border: 1px solid #a6abb9;\n  padding-top: 12px;\n  padding-left: 13px;\n  padding-bottom: 13px;\n  color: #242a37;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.21;\n  outline: none;\n`;\n\nexport const StyledField = styled.div`\n  height: 42px;\n  width: 110px;\n  background-color: #f6f7fb;\n  border: 1px solid #a6abb9;\n  padding-top: 12px;\n  padding-left: 13px;\n  padding-bottom: 13px;\n  color: #242a37;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.21;\n`;\nexport const styleForPageInput = {\n  width: '100%',\n  backgroundColor: 'transparent',\n  border: 'none',\n  outline: 'none',\n};\nexport const StyledInputsWrapper = styled.div`\n  display: flex;\n  margin-bottom: 28px;\n  justify-content: space-between;\n`;\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-size: 11px;\n  font-weight: 500;\n  line-height: 1.18;\n  color: #242a37;\n`;\nexport const StyledForm = styled(Form)`\n  display: flex;\n  /* align-items: center; */\n\n  flex-direction: column;\n\n  width: 100%;\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage, Field } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from 'components/StyledButton/StyledButton ';\nimport { trainingThunk } from 'redux/training';\n\n// import ModalFinish from 'components/ModalFinish/ModalFinish';\n\nimport { readingResultSchema } from 'validSchemas/readingResultSchema';\n\nimport {\n  StyledField,\n  StyledDateView,\n  styleForPageInput,\n  StyledInputsWrapper,\n  StyledLabel,\n  StyledForm,\n} from './SendForm.styled';\n\nexport const SendForm = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    dateInput: new Date(),\n    pageInput: '',\n  };\n\n  const handleSubmit = (val, { resetForm }) => {\n    dispatch(trainingThunk.addResultThank(val));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={readingResultSchema}\n      onSubmit={handleSubmit}\n    >\n      <StyledForm autoComplete=\"off\">\n        <StyledInputsWrapper>\n          <StyledLabel htmlFor=\"dateInput\">\n            {t('date')}\n            <div>\n              <Field name=\"dateInput\">\n                {({ form, field }) => {\n                  const { setFieldValue } = form;\n                  const { value } = field;\n                  return (\n                    <StyledDateView\n                      id=\"dateInput\"\n                      selected={value}\n                      onChange={val => setFieldValue(val)}\n                      closeOnScroll={true}\n                      dateFormat=\" dd.MM.yyyy\"\n                      maxDate={Date.now()}\n                      showDisabledMonthNavigation\n                    />\n                  );\n                }}\n              </Field>\n              <ErrorMessage name=\"dateInput\" />\n            </div>\n          </StyledLabel>\n\n          <StyledLabel htmlFor=\"pageInput\">\n            {t('amountOfPages_results')}\n            <StyledField>\n              <Field\n                type=\"number\"\n                name=\"pageInput\"\n                style={styleForPageInput}\n              ></Field>\n            </StyledField>\n          </StyledLabel>\n        </StyledInputsWrapper>\n        <Button\n          center\n          active\n          textContent={t('addResult')}\n          size={240}\n          type=\"submit\"\n          height={40}\n        ></Button>\n\n        {/* <button className={s.addResultBtn} type=\"submit\">\n          {}\n        </button> */}\n        {/* {open && <ModalFinish onClose={handleExit} />} */}\n        {/* </form> */}\n      </StyledForm>\n    </Formik>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"statisticsList_container__Z3P-2\",\"inputs\":\"statisticsList_inputs__V22vQ\",\"inputsLabel\":\"statisticsList_inputsLabel__CNG8h\",\"inputsLabelDate\":\"statisticsList_inputsLabelDate__O7Skb\",\"inputsLabelPage\":\"statisticsList_inputsLabelPage__T87r4\",\"inputDate\":\"statisticsList_inputDate__8WLSX\",\"inputPage\":\"statisticsList_inputPage__YPQbP\",\"addResultBtn\":\"statisticsList_addResultBtn__Rov74\",\"resultsHeader\":\"statisticsList_resultsHeader__tIGgI\",\"statisticsHeader\":\"statisticsList_statisticsHeader__0Qyuz\",\"statisticsList\":\"statisticsList_statisticsList__9gcBn\",\"statisticsListItem\":\"statisticsList_statisticsListItem__pLr0d\",\"cellTime\":\"statisticsList_cellTime__1vP-7\",\"cellPage\":\"statisticsList_cellPage__2EOFb\",\"cellPageAfter\":\"statisticsList_cellPageAfter__4CkuX\",\"triangle\":\"statisticsList_triangle__fPx6C\",\"formResults\":\"statisticsList_formResults__1oh4D\",\"backEndError\":\"statisticsList_backEndError__tjHw9\"};","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport s from './statisticsList.module.css';\n\nconst StatisticsRow = ({ row }) => {\n  const { date, time, pages } = row;\n  const { t } = useTranslation();\n\n  return (\n    <li className={s.statisticsListItem}>\n      <span className={s.cellDate}>{date}</span>\n      <span className={s.cellTime}>{time}</span>\n      <span className={s.cellPage}>{pages}</span>\n      <span className={s.cellPageAfter}>&nbsp;{t('results_pages')}</span>\n    </li>\n  );\n};\nexport default StatisticsRow;\nStatisticsRow.propTypes = {\n  row: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    pages: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import { format } from 'date-fns';\n\nexport const date = date => {\n  return format(Date.parse(date), 'dd.MM.yyyy');\n};\nexport const time = date => {\n  return format(Date.parse(date), 'HH:mm:ss');\n};\n","import StatisticsRow from './StatisticsRow';\nimport s from './statisticsList.module.css';\n\nimport * as format from 'helpers/formatDate';\n\nexport const StatisticsList = ({ results }) => {\n  const visibleRows = results\n    ?.map(({ date, pages, _id }) => ({\n      date: format.date(date),\n      time: format.time(date),\n      pages: pages,\n      id: _id,\n    }))\n    .reverse()\n    .slice(0, 5);\n\n  return (\n    <ul className={s.statisticsList}>\n      {visibleRows.map(row => (\n        <StatisticsRow key={row.id} row={row} className={s.statisticsList} />\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 280px;\n  padding: 20px 20px 22px 20px;\n  gap: 32px;\n  background-color: #ffffff;\n  box-shadow: 0px 2px 3px rgba(9, 30, 63, 0.1);\n\n  @media ${p => p.theme.media.tablet} {\n    flex-direction: row;\n    width: 704px;\n    margin-bottom: 53px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\n\nexport const StyledTitle = styled.h2`\n  text-transform: uppercase;\n  font-size: 12px;\n  line-height: 1.25;\n  color: ${p => p.theme.colors.deepBlue};\n  text-align: center;\n  margin-bottom: 12px;\n\n  @media ${p => p.theme.media.tablet} {\n    font-size: 14px;\n    line-height: 1.21;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { trainingSelectors, trainingThunk } from 'redux/training';\nimport { SendForm } from 'components/SendForm/SendForm';\nimport { StatisticsList } from 'components/StatisticsList/StatisticsList';\nimport { Wrapper, StyledTitle } from './ReadingInformation.styled';\n\nexport const ReadingInformation = () => {\n  const dispatch = useDispatch();\n  const results = useSelector(trainingSelectors.results);\n\n  useEffect(() => {\n    dispatch(trainingThunk.getTrainingThank());\n  }, [dispatch, results]);\n\n  const { t } = useTranslation();\n  return (\n    <>\n      <Wrapper>\n        <div>\n          <StyledTitle> {t('results')}</StyledTitle>\n          <SendForm />\n        </div>\n        <div>\n          <StyledTitle> {t('statistics')}</StyledTitle>\n          <StatisticsList results={results} />\n        </div>\n      </Wrapper>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TrainingContainer = styled.div`\n  display: flex;\n  flex-direction: ${p => (p.trainingStarted ? 'column' : 'column-reverse')};\n  gap: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  @media ${p => p.theme.media.tablet} {\n    width: 100%;\n    padding-top: 40px;\n    padding-bottom: 40px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    flex-direction: row;\n    justify-content: space-between;\n    // padding: ${p => p.theme.space[5]}px;\n  }\n`;\n\n//  <StyledContainer>\n//       <WrapperBody>\n//         {isMobileDevice ? (\n//           <CenterFlexBox>\n//             {isTrainingStarted ? (\n//               <></>\n//             ) : (\n//               <>\n//                 <MobileLinkToSecondPage to=\"/mobileTraingBookTable \" />\n//                 <TrainingDataSelection />\n//               </>\n//             )}\n//           </CenterFlexBox>\n//         ) : (\n//           <CenterFlexBox>\n//             {isTrainingStarted ? (\n//               <TrainingContainer trainingStarted>\n//                 <Timer endDate={endDate} />\n//                 <MyGoal\n//                   trainingStarted\n//                   statistic={myGoalParamsTrainingStarted}\n//                 />\n//               </TrainingContainer>\n//             ) : (\n//               <TrainingContainer>\n//                 <TrainingDataSelection />\n//                 <MyGoal statistic={myGoalParams} />\n//               </TrainingContainer>\n//             )}\n\n//             <LibBookTable data={books} training />\n//             {!isTrainingStarted && (\n//               <Button\n//                 onClick={onStartTrainingClick}\n//                 textContent={t('startTraining')}\n//                 active\n//                 size={200}\n//                 disabled={!isExistTrainingDate}\n//                 type=\"button\"\n//               />\n//             )}\n//           </CenterFlexBox>\n//         )}\n//       </WrapperBody>\n//     </StyledContainer>\n//   );\n// };\n","import styled from 'styled-components';\nexport const SiteBar = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  width: 288px;\n`;\n","import { useEffect } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport { useLogOutRedirect } from 'hooks/useLogOutRedirect';\nimport { userSelectors, userThunk } from 'redux/auth';\nimport { selectedDatesSelectors } from 'redux/selectedDates';\nimport { trainingSelectors, trainingThunk } from 'redux/training';\nimport { convertMs } from 'helpers/convertMs';\n\nimport { TrainingDataSelection } from 'components/TrainingDataSelection/TrainingDataSelection';\nimport { MyGoal } from 'components/MyGoal/MyGoal';\nimport { BookTableMobile } from 'components/BookTableMobile/BookTableMobile';\nimport { Timer } from 'components/Timer/Timer';\nimport { LibBookTable } from 'components/LibBookTable/LibBookTable';\nimport { ReadingInformation } from 'components/ReadingInformation/ReadingInformation';\nimport { Button } from 'components/StyledButton/StyledButton ';\nimport { MobileLinkToSecondPage } from 'components/MobileLinkToSecondPage/MobileLinkToSecondPage';\nimport { StyledContainer } from 'components/StyledContainer/StyledContainer.styled';\nimport { TrainingContainer } from 'components/TrainingContainer/TrainingContainer';\nimport { CenterFlexBox } from 'components/CenterFlexBox/CenterFlexBox';\nimport { SiteBar } from 'components/SiteBar/SiteBar';\nconst Training = () => {\n  useLogOutRedirect();\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const isMobileDevice = useMediaQuery({ query: '(max-width: 767px)' });\n  const isDesktopDevice = useMediaQuery({ query: '(min-width: 1280px)' });\n\n  // const [updateUi, setUpdateUi] = useState(false);\n  const isTrainingStarted = useSelector(userSelectors.isTrainingStarted);\n  useEffect(() => {\n    if (isTrainingStarted) {\n      dispatch(trainingThunk.getTrainingThank());\n    }\n  }, [dispatch, isTrainingStarted]);\n\n  const selectedBooks = useSelector(selectedDatesSelectors.booksList);\n  const selectedEndDate = useSelector(selectedDatesSelectors.endDate);\n  const selectedStartDate = useSelector(selectedDatesSelectors.startDate);\n\n  const books = useSelector(trainingSelectors.booksList);\n  const finishDate = useSelector(trainingSelectors.finishDate);\n  const startDate = useSelector(trainingSelectors.startDate);\n\n  const deltaTime = finishDate ? finishDate - startDate : 0;\n  const { days } = convertMs(deltaTime);\n\n  const isExistNoSaveTrainingDate =\n    !isTrainingStarted && selectedBooks?.length > 0 && selectedEndDate !== '';\n\n  const onStartTrainingClick = () => {\n    dispatch(userThunk.changeTrainingStatusThunk(true));\n    dispatch(\n      trainingThunk.addTrainingThank({\n        startDate: selectedStartDate,\n        finishDate: selectedEndDate,\n        books: selectedBooks,\n      })\n    );\n  };\n  const myGoalParams = [\n    { param: 'books', text: t('amountOfBooks'), amount: books.length },\n    { param: 'days', text: t('amountOfDays'), amount: days },\n  ];\n  const myGoalParamsTrainingStarted = [\n    { param: 'books', text: t('amountOfBooks'), amount: books.length },\n    { param: 'days', text: t('amountOfDays'), amount: days },\n    { param: 'booksLeft', text: t('booksLeft'), amount: 5 },\n  ];\n\n  return (\n    <StyledContainer>\n      <CenterFlexBox>\n        {isTrainingStarted ? (\n          <>\n            <TrainingContainer trainingStarted>\n              <CenterFlexBox>\n                <Timer endDate={finishDate} />\n                {isDesktopDevice && (\n                  <LibBookTable data={books} startedTraining />\n                )}\n              </CenterFlexBox>\n              <SiteBar>\n                <MyGoal\n                  trainingStarted\n                  statistic={myGoalParamsTrainingStarted}\n                />\n                <ReadingInformation />\n              </SiteBar>\n            </TrainingContainer>\n\n            {!isDesktopDevice && !isMobileDevice && (\n              <LibBookTable data={books} startedTraining />\n            )}\n\n            {isMobileDevice && (\n              <BookTableMobile books={books} startedTraining />\n            )}\n          </>\n        ) : (\n          <>\n            {isMobileDevice ? (\n              <>\n                <MobileLinkToSecondPage to=\"/mobileTraingBookTable \" />\n                <TrainingDataSelection />\n              </>\n            ) : (\n              <>\n                <TrainingContainer>\n                  <TrainingDataSelection />\n                  <MyGoal statistic={myGoalParams} />\n                </TrainingContainer>\n                <LibBookTable data={selectedBooks} training />\n                <Button\n                  onClick={onStartTrainingClick}\n                  textContent={t('startTraining')}\n                  active\n                  size={200}\n                  disabled={!isExistNoSaveTrainingDate}\n                  type=\"button\"\n                />\n              </>\n            )}\n          </>\n        )}\n        {/* {!isMobileDevice && <LibBookTable data={books} training />} */}\n      </CenterFlexBox>\n    </StyledContainer>\n  );\n};\n\nexport default Training;\n"],"names":["CenterFlexBox","styled","StyledLink","Link","p","theme","colors","accentColor","MobileLinkToSecondPage","to","booksList","state","training","books","startDate","finishDate","results","convertMs","ms","minute","second","hour","day","days","Math","floor","hours","minutes","seconds","StyledTitle","fontWeights","bold","fontSizes","m","lineHeights","secondBody","white","backgroundTitle","media","desktop","TrainingTitle","text","StyledForm","Form","tablet","deepBlue","Wrapper","initialValues","book","validationSchema","Yup","required","SelectBooks","t","useTranslation","dispatch","useDispatch","useSelector","booksSelectors","filter","status","defaultValue","onSubmit","val","resetForm","newBook","find","_id","selectedDatesActions","name","as","value","hidden","disabled","map","title","size","textContent","type","TrainingWrapper","normal","space","StyledControlsWrapper","backgroundBody","iconColor","TrainingDataSelection","start","selectedDates","end","endDate","useState","setStartDate","setEndDate","useEffect","data","valueOf","showIcon","selected","onChange","date","closeOnScroll","dateFormat","selectsStart","minDate","Date","now","showDisabledMonthNavigation","placeholderText","selectsEnd","MyGoalMainBox","StatsBox","isTrainingStarted","MyGoalStatsList","MyGoalStatsListItem","MyGoalStatsDigitBox","backgroundStatistic","xxl","param","statisticColor","xl","MyGoalStatsText","xs","s","notActiveText","ss","MyGoal","trainingStarted","statistic","amount","StyledTimerWrapper","TimerTitle","StyledContainer","StyledItem","StyledValue","StyledSeparator","StyledSpan","TimerItem","selectedDate","timerTitle","time","setTime","intervalId","useRef","timeLeft","current","clearInterval","setInterval","TimerWrapper","Timer","currentYear","getFullYear","endYear","today","parse","readingResultSchema","shape","dateInput","max","pageInput","integer","min","StyledDateView","DateView","StyledField","styleForPageInput","width","backgroundColor","border","outline","StyledInputsWrapper","StyledLabel","SendForm","trainingThunk","autoComplete","htmlFor","form","field","setFieldValue","id","maxDate","style","center","active","height","row","pages","className","format","StatisticsList","visibleRows","reverse","slice","ReadingInformation","trainingSelectors","TrainingContainer","SiteBar","useLogOutRedirect","isMobileDevice","useMediaQuery","query","isDesktopDevice","userSelectors","selectedBooks","selectedDatesSelectors","selectedEndDate","selectedStartDate","isExistNoSaveTrainingDate","length","myGoalParams","myGoalParamsTrainingStarted","LibBookTable","startedTraining","BookTableMobile","onClick","userThunk","changeTrainingStatusThunk"],"sourceRoot":""}