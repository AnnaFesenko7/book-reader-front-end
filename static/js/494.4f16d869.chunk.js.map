{"version":3,"file":"static/js/494.4f16d869.chunk.js","mappings":"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","sources":["components/LineChart/LineChart.styled.js","components/LineChart/LineChart.js","components/MobileLinkToSecondPage/MobileLinkToSecondPage.js","components/MyGoal/MyGoal.styled.js","components/MyGoal/MyGoal.js","components/TrainingTitle/TrainingTitle.js","helpers/convertMs.js","helpers/formatDate.js","components/SelectBooks/SelectBooks.styled.js","components/SelectBooks/SelectBooks.js","components/TrainingDataSelection/TrainingDataSelection.style.js","components/TrainingDataSelection/TrainingDataSelection.js","components/TimerItem/TimerItem.styled.js","components/TimerItem/TimerItem.js","components/Timer/Timer.styled.js","components/Timer/Timer.js","validSchemas/readingResultSchema.js","components/SendResultsForm/SendResultsForm.styled.js","components/SendResultsForm/SendResultsForm.js","components/StatisticsList/StatisticsList.styled.js","components/StatisticsList/StatisticsRow.js","components/StatisticsList/StatisticsList.js","components/ReadingInformation/ReadingInformation.styled.js","components/ReadingInformation/ReadingInformation.js","components/TrainingContainer/TrainingContainer.js","components/SiteBar/SiteBar.js","components/FinishModal/FinishModal.styled.js","components/FinishModal/FinishModal.js","pages/Training.js","redux/training/trainingSelectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ChartBox = styled.div`\n  position: relative;\n  padding: 80px 22px;\n  background-color: ${p => p.theme.colors.white};\n  width: 100%;\n  height: 290px;\n  @media ${p => p.theme.media.tablet} {\n    padding: 25px 35px;\n    height: 90%;\n    /* margin-top: ${p => p.theme.space[6]}px; */\n  }\n  @media ${p => p.theme.media.desktop} {\n    margin-top: ${p => p.theme.space[6]}px;\n  }\n`;\n\nexport const StyledTitle = styled.p`\n  font-weight: 500;\n  font-size: ${p => p.theme.fontSizes.xs};\n  text-transform: uppercase;\n  margin-bottom: 24px;\n  color: ${p => p.theme.colors.deepBlue};\n`;\n\nexport const StyledSpan = styled.span`\n  font-weight: 600;\n  font-size: ${p => p.theme.fontSizes.xs};\n  text-transform: uppercase;\n  text-align: center;\n  width: 25px;\n  height: 25px;\n  padding: 6px 8px;\n  margin-left: 8px;\n  color: ${p => p.theme.colors.deepBlue};\n  background-color: ${p => p.theme.colors.backgroundStatistic};\n`;\n\nexport const LineBox = styled.div`\n  position: absolute;\n  height: auto;\n  right: 10px;\n  top: 150px;\n  @media ${p => p.theme.media.tablet} {\n    right: 0px;\n    top: 130px;\n  }\n`;\n\nexport const LineList = styled.ul`\n  padding: 0px;\n  margin: 0px;\n  text-align: right;\n\n  font-weight: 600;\n  font-size: ${p => p.theme.fontSizes.ss};\n  line-height: 2.5;\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.statisticColor};\n  @media ${p => p.theme.media.tablet} {\n    font-size: ${p => p.theme.fontSizes.xs};\n  }\n`;\n\nexport const LineItem = styled.li`\n  width: 30px;\n  height: 18px;\n  margin-right: 11px;\n  background-color: rgba(245, 247, 250, 0.85);\n  box-shadow: 0px 2px 3px rgba(9, 30, 63, 0.1);\n  text-align: center;\n  color: ${p =>\n    p.accent ? p.theme.colors.accentColor : p.theme.colors.statisticColor};\n  margin-bottom: 16px;\n\n  @media ${p => p.theme.media.tablet} {\n    margin-right: 45px;\n    width: 50px;\n    height: 30px;\n  }\n`;\n\nexport const StyledP = styled.p`\n  display: flex;\n  justify-content: flex-end;\n  position: relative;\n  bottom: 15px;\n  right: 12px;\n\n  font-weight: 600;\n  font-size: ${p => p.theme.fontSizes.xs};\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.statisticColor};\n  margin-top: 8px;\n  @media ${p => p.theme.media.tablet} {\n    margin-top: 16px;\n  }\n`;\n","import { Line } from 'react-chartjs-2';\nimport { useSelector } from 'react-redux';\nimport { trainingSelectors } from 'redux/training';\nimport * as format from 'helpers/formatDate';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ChartBox,\n  StyledTitle,\n  StyledSpan,\n  LineBox,\n  LineList,\n  LineItem,\n  StyledP,\n} from './LineChart.styled';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst options = {\n  responsive: true,\n  scales: {\n    y: {\n      display: false,\n    },\n  },\n  plugins: {\n    legend: {\n      display: false,\n    },\n    title: {\n      display: false,\n    },\n  },\n};\n\nexport const LineChart = ({ days, totalPagesInTraining, startDate }) => {\n  console.log('🚀 ~ file: LineChart.js:54 ~ LineChart ~ days:', days);\n  const { t } = useTranslation();\n  const results = useSelector(trainingSelectors.results);\n\n  const labelsArr = days === 0 ? [] : Array.apply(null, Array(days + 1));\n  console.log('🚀 ~ file: LineChart.js:59 ~ LineChart ~ labelsArr:', labelsArr);\n\n  labelsArr.forEach((_, index, array) => {\n    array[index] = format.dayLikeChartLabel(\n      new Date(startDate + index * 24 * 60 * 60 * 1000)\n    );\n  });\n\n  const averageNumberOfPagesPerDay = days > 0 ? totalPagesInTraining / days : 0;\n  const planArr = Array.apply(null, Array(days + 1));\n\n  planArr.forEach((_, index, array) => {\n    array[index] = Math.round(\n      averageNumberOfPagesPerDay + averageNumberOfPagesPerDay * index\n    );\n  });\n\n  const resultsByDay = results?.reduce((obj, result) => {\n    const day = format.dayLikeChartLabel(result.date);\n    return { ...obj, [day]: obj[day] ? obj[day] + result.pages : result.pages };\n  }, {});\n\n  const factArr = labelsArr.reduce((acc, data, index, arr) => {\n    const resultDates = Object.keys(resultsByDay);\n    const lastDate = resultDates[resultDates.length - 1];\n    const indexLastDate = arr.indexOf(lastDate);\n    if (index === 0) {\n      return [resultsByDay[data] ? resultsByDay[data] : 0];\n    }\n    if (index > indexLastDate) {\n      return [...acc];\n    }\n\n    return [\n      ...acc,\n      resultsByDay[data]\n        ? resultsByDay[data] + acc[acc.length - 1]\n        : acc[acc.length - 1],\n    ];\n  }, []);\n\n  const lab = labelsArr.length > 0 ? [...labelsArr] : ['', '', '', ''];\n\n  const plan = planArr.length > 0 ? [...planArr] : [5];\n  const fact = factArr.length > 0 ? [...factArr] : [0];\n\n  const labels = [...lab];\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: 'Plan',\n        data: [...plan],\n        lineTension: 0.3,\n        borderColor: '#091e3f',\n        pointBackgroundColor: '#091e3f',\n        pointHoverRadius: 10,\n        pointRadius: 8,\n        PointHitRadius: 10,\n      },\n      {\n        label: 'Fact',\n        data: [...fact],\n        lineTension: 0.3,\n        borderColor: '#ff6b08',\n        pointBackgroundColor: '#ff6b08',\n        pointHoverRadius: 10,\n        pointRadius: 8,\n        PointHitRadius: 10,\n      },\n    ],\n  };\n\n  return (\n    <ChartBox>\n      <StyledTitle>\n        {t('number_of_pages_a_day')}\n\n        <StyledSpan>{Math.round(averageNumberOfPagesPerDay)}</StyledSpan>\n      </StyledTitle>\n      <LineBox>\n        <LineList>\n          <LineItem>{t('line_chart_plan')}</LineItem>\n          <LineItem accent>{t('line_chart_fact')}</LineItem>\n        </LineList>\n      </LineBox>\n      <Line options={options} data={data} />\n      <StyledP>{t('line_chart_time')}</StyledP>\n    </ChartBox>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaArrowLeft } from 'react-icons/fa';\n\nconst StyledLink = styled(Link)`\n  color: ${p => p.theme.colors.accentColor};\n  display: block;\n  margin-top: 40px;\n  align-self: start;\n  margin-left: 16px;\n`;\n\nexport const MobileLinkToSecondPage = ({ to }) => {\n  return (\n    <StyledLink to={to}>\n      <FaArrowLeft />\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MyGoalMainBox = styled.div`\n  width: 100%;\n  background-color: white;\n  box-shadow: 0px 2px 3px rgba(9, 30, 63, 0.1);\n\n  @media ${p => p.theme.media.tablet} {\n    padding-left: ${p => p.theme.space[5]}px;\n    padding-right: ${p => p.theme.space[5]}px;\n\n    display: flex;\n    align-items: baseline;\n\n    h2 {\n      width: 275px;\n    }\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    padding-left: 0;\n    padding-right: 0;\n    width: 288px;\n\n    display: block;\n    h2 {\n      width: 100%;\n    }\n  }\n`;\n\nexport const StatsBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: ${p => (p.isTrainingStarted ? 161 : 236)}px;\n  background-color: white;\n  box-shadow: 0px 2px 3px rgba(9, 30, 63, 0.1);\n\n  @media ${p => p.theme.media.tablet} {\n    height: 105px;\n    box-shadow: none;\n    margin-left: auto;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    height: ${p => (p.isTrainingStarted ? 269 : 244)}px;\n  }\n`;\n\nexport const MyGoalStatsList = styled.ul`\n  display: flex;\n  justify-content: center;\n\n  width: 100%;\n  gap: 20px;\n  padding: ${p => p.theme.space[5]}px;\n\n  @media ${p => p.theme.media.tablet} {\n    align-items: baseline;\n    gap: ${p => (p.isTrainingStarted ? 12 : 40)}px;\n    padding: 0;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    gap: 20px;\n    margin: 0;\n  }\n`;\n\nexport const MyGoalStatsListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media ${p => p.theme.media.tablet} {\n    height: 60px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    height: 148px;\n    width: ${p => p.isTrainingStarted && 70}px;\n  }\n`;\n\nexport const MyGoalStatsDigitBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: ${p => (p.isTrainingStarted ? 66 : 100)}px;\n  height: ${p => (p.isTrainingStarted ? 66 : 100)}px;\n  background: ${p => p.theme.colors.backgroundStatistic};\n  box-shadow: 4px 4px 8px rgba(36, 42, 55, 0.15);\n\n  font-family: Open Sans;\n  font-weight: 700;\n  font-size: ${p => p.theme.fontSizes.xxl};\n  line-height: 1.18;\n  text-align: center;\n  color: ${p => {\n    // console.log(p.booksLeft);\n    return p.param === 'booksLeft'\n      ? `${p.theme.colors.accentColor}`\n      : `${p.theme.colors.statisticColor}`;\n  }};\n\n  @media ${p => p.theme.media.tablet} {\n    font-size: ${p => p.theme.fontSizes.xl};\n    width: 100px;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    width: ${p => (p.isTrainingStarted ? 66 : 100)}px;\n    height: ${p => (p.isTrainingStarted ? 66 : 100)}px;\n  }\n`;\n\nexport const MyGoalStatsText = styled.span`\n  width: 100%;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p =>\n    p.isTrainingStarted ? `${p.theme.fontSizes.xs}` : `${p.theme.fontSizes.s}`};\n  line-height: ${p => p.theme.lineHeights.secondBody};\n  text-align: center;\n  color: ${p => p.theme.colors.notActiveText};\n\n  display: flex;\n  justify-content: center;\n  margin-top: 14px;\n\n  @media ${p => p.theme.media.tablet} {\n    max-width: 100px;\n    font-size: ${p => p.theme.fontSizes.ss};\n    margin-top: 0;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    font-size: ${p =>\n      p.isTrainingStarted\n        ? `${p.theme.fontSizes.xs}`\n        : `${p.theme.fontSizes.s}`};\n    margin-top: 14px;\n  }\n`;\n","import { useTranslation } from 'react-i18next';\n\nimport { TrainingTitle } from 'components/TrainingTitle/TrainingTitle';\nimport {\n  MyGoalMainBox,\n  StatsBox,\n  MyGoalStatsList,\n  MyGoalStatsListItem,\n  MyGoalStatsDigitBox,\n  MyGoalStatsText,\n} from './MyGoal.styled';\n\nexport const MyGoal = ({ trainingStarted, statistic }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <MyGoalMainBox>\n        <TrainingTitle text={t('myGoals')} />\n\n        <StatsBox isTrainingStarted={trainingStarted}>\n          <MyGoalStatsList isTrainingStarted={trainingStarted}>\n            {statistic.map(({ param, text, amount }) => (\n              <MyGoalStatsListItem\n                key={param}\n                isTrainingStarted={trainingStarted}\n              >\n                <MyGoalStatsDigitBox\n                  param={param}\n                  isTrainingStarted={trainingStarted}\n                >\n                  {amount}\n                </MyGoalStatsDigitBox>\n                <MyGoalStatsText isTrainingStarted={trainingStarted}>\n                  {text}\n                </MyGoalStatsText>\n              </MyGoalStatsListItem>\n            ))}\n          </MyGoalStatsList>\n        </StatsBox>\n      </MyGoalMainBox>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nconst StyledTitle = styled.h2`\n  width: 100%;\n  height: 60px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: ${p => p.theme.lineHeights.secondBody};\n\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.backgroundTitle};\n  box-shadow: 0px 2px 3px rgba(9, 30, 63, 0.1);\n\n  @media ${p => p.theme.media.desktop} {\n    /* width: 288px !important; */\n  }\n`;\nexport const TrainingTitle = ({ text }) => {\n  return <StyledTitle>{text}</StyledTitle>;\n};\n","export function convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day) + 1;\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  //  Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n","import { format } from 'date-fns';\n\nexport const day = date => {\n  return format(Date.parse(date), 'dd.MM.yyyy');\n};\nexport const time = date => {\n  return format(Date.parse(date), 'HH:mm:ss');\n};\nexport const dayLikeChartLabel = date => {\n  return format(Date.parse(date), 'dd.MM');\n};\n","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n\n  @media ${p => p.theme.media.tablet} {\n    flex-direction: row;\n    align-items: flex-start;\n    justify-content: space-between;\n  }\n\n  select {\n    display: block;\n    width: 100%;\n    height: 40px;\n    padding: 2px 32px 2px 12px;\n    background-color: ${p => p.theme.colors.white};\n    outline: none;\n    border: none;\n    color: ${p => p.theme.colors.deepBlue};\n\n    @media ${p => p.theme.media.tablet} {\n      width: 483px;\n    }\n    @media ${p => p.theme.media.desktop} {\n      width: 715px;\n    }\n  }\n`;\nexport const Wrapper = styled.div`\n  width: 100%;\n\n  @media ${p => p.theme.media.tablet} {\n    width: 483px;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    width: 715px;\n  }\n`;\n","import { useTranslation } from 'react-i18next';\nimport { selectedDatesActions } from 'redux/selectedDates';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { booksSelectors } from 'redux/books';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Button } from 'components/StyledButton/StyledButton ';\nimport { ErrorContainer } from 'components/ErrorContainer/ErrorContainer.styled';\n\nimport { StyledForm, Wrapper } from './SelectBooks.styled';\n\nconst initialValues = {\n  book: '',\n};\nconst validationSchema = Yup.object({\n  book: Yup.string().required('Please select a book'),\n});\n\nexport const SelectBooks = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const booksList = useSelector(booksSelectors.getBooks);\n  const books = booksList.filter(book => book.status === 'toRead');\n\n  const defaultValue = t('chooseBooks');\n\n  const onSubmit = (val, { resetForm }) => {\n    // const isBookAlreadySelected = selectedBooks.some(({ _id }) => _id === book);\n    // if (isBookAlreadySelected) {\n    //   throw Error('This book already selected');\n    // }\n    const newBook = books.find(book => book._id === val.book);\n\n    resetForm();\n    dispatch(selectedDatesActions.addBook(newBook));\n  };\n\n  return (\n    <Formik\n      onSubmit={onSubmit}\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n    >\n      <StyledForm>\n        <Wrapper>\n          <Field name=\"book\" as=\"select\">\n            <option value=\"\" hidden disabled>\n              {defaultValue}\n            </option>\n            {books.map(book => (\n              <option value={book._id} key={book._id}>\n                {book.title}\n              </option>\n            ))}\n          </Field>\n          <ErrorContainer>\n            {/* {isBookAlreadySelected && <p>This book already selected</p>} */}\n            <ErrorMessage name=\"book\" />\n          </ErrorContainer>\n        </Wrapper>\n\n        <Button size={170} textContent={t('btnAdd')} type=\"submit\" />\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TrainingWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: 14px;\n  line-height: 1.21;\n  gap: 20px;\n  padding: ${p => p.theme.space[5]}px;\n\n  @media ${p => p.theme.media.tablet} {\n    gap: 24px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    width: 928px;\n    gap: 32px;\n    padding: 0;\n  }\n`;\n\nexport const StyledControlsWrapper = styled.div`\n  input {\n    display: block;\n    width: 100%;\n    height: 40px;\n    padding: 2px 31px 2px 40px !important;\n    background-color: ${p => p.theme.colors.backgroundBody};\n    border: 1px solid #a6abb9;\n    margin-bottom: 20px;\n    @media screen and (min-width: 768px) {\n      width: 250px;\n      margin: 0;\n    }\n  }\n  div {\n    z-index: 10;\n  }\n  svg {\n    z-index: 5;\n    padding: 0 !important;\n    position: absolute;\n    top: 12px;\n    left: 12px;\n    width: 17px;\n    height: 17px;\n    fill: ${p => p.theme.colors.iconColor};\n  }\n\n  @media ${p => p.theme.media.tablet} {\n    display: flex;\n    gap: 40px;\n    align-self: flex-start;\n  }\n  @media ${p => p.theme.media.desktop} {\n    align-self: center;\n    gap: 40px;\n  }\n`;\n\nexport const TrainingContainer = styled.div`\n  min-width: 320px;\n  margin-left: auto;\n  margin-right: auto;\n  /* padding: 32px 20px; */\n  background-color: #f6f7fb;\n  @media screen and (min-width: 768px) {\n    min-width: 768px;\n    padding: 40px 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n`;\n\nexport const TrainingMaine = styled.div`\n  @media screen and (min-width: 1280px) {\n    width: 928px;\n  }\n`;\n\nexport const TrainingSidebar = styled.div`\n  @media screen and (min-width: 1280px) {\n    width: 288px;\n  }\n`;\n","import DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport { selectedDatesActions } from 'redux/selectedDates';\n\nimport { TrainingTitle } from 'components/TrainingTitle/TrainingTitle';\nimport { SelectBooks } from 'components/SelectBooks/SelectBooks';\nimport {\n  StyledControlsWrapper,\n  TrainingWrapper,\n} from './TrainingDataSelection.style';\n\nexport const TrainingDataSelection = () => {\n  const { t } = useTranslation();\n  const start = useSelector(state => state.selectedDates.startDate);\n  const end = useSelector(state => state.selectedDates.endDate);\n  const [startDate, setStartDate] = useState(start);\n  const [endDate, setEndDate] = useState(end);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const data = startDate.valueOf();\n\n    dispatch(selectedDatesActions.startDate(data));\n  }, [dispatch, startDate]);\n\n  useEffect(() => {\n    const data = endDate.valueOf();\n\n    dispatch(selectedDatesActions.endDate(data));\n  }, [dispatch, endDate]);\n\n  return (\n    <>\n      <TrainingWrapper>\n        <TrainingTitle text={t('myTraining')} />\n        <StyledControlsWrapper>\n          <DatePicker\n            showIcon\n            selected={start}\n            onChange={date => setStartDate(date)}\n            closeOnScroll={true}\n            dateFormat=\"MMMM d, yyyy h:mm aa\"\n            selectsStart\n            minDate={Date.now()}\n            showDisabledMonthNavigation\n            placeholderText={t('start')}\n          />\n\n          <DatePicker\n            showIcon\n            selected={end}\n            onChange={date => setEndDate(date)}\n            closeOnScroll={true}\n            dateFormat=\"MMMM d, yyyy h:mm aa\"\n            selectsEnd\n            minDate={startDate}\n            showDisabledMonthNavigation\n            placeholderText={t('finish')}\n          />\n        </StyledControlsWrapper>\n        <SelectBooks />\n      </TrainingWrapper>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledTimerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  @media ${p => p.theme.media.tablet} {\n    width: 290px;\n  }\n`;\n\nexport const TimerTitle = styled.div`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.21;\n  color: #898f9f;\n  margin-bottom: 8px;\n`;\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  align-items: start;\n  justify-content: center;\n  width: 100%;\n  height: 60px;\n\n  background: #ffffff;\n  box-shadow: 4px 4px 8px rgba(36, 42, 55, 0.15);\n  padding-bottom: 8px;\n`;\nexport const StyledItem = styled.p`\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  text-align: center;\n  width: 43px;\n\n  :not(:last-child) {\n    margin-right: 8px;\n  }\n`;\n\nexport const StyledValue = styled.span`\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 25px;\n  line-height: 1.52;\n\n  color: #091e3f;\n`;\nexport const StyledSeparator = styled.span`\n  font-weight: 700;\n  font-size: 25px;\n  line-height: 1.52;\n  margin-right: 8px;\n`;\n\nexport const StyledSpan = styled.span`\n  font-weight: 500;\n  font-size: 10px;\n  line-height: 12px;\n  text-align: center;\n\n  color: #898f9f;\n`;\n","import { useTranslation } from 'react-i18next';\n\nimport {\n  StyledContainer,\n  StyledItem,\n  StyledValue,\n  StyledTimerWrapper,\n  TimerTitle,\n  StyledSpan,\n  StyledSeparator,\n} from './TimerItem.styled.js';\nimport { useState, useEffect, useRef } from 'react';\nimport { convertMs } from 'helpers/convertMs.js';\n\nexport const TimerItem = ({ selectedDate, timerTitle }) => {\n  const [time, setTime] = useState(() => Date.now());\n  const { t } = useTranslation();\n  const intervalId = useRef(null);\n  const deltaTime = selectedDate - time;\n  const timeLeft = convertMs(deltaTime);\n\n  useEffect(() => {\n    if (intervalId.current === null) {\n      intervalId.current = setInterval(() => {\n        setTime(Date.now());\n      }, 1000);\n      return;\n    }\n    return clearInterval(intervalId);\n  }, []);\n\n  return (\n    <StyledTimerWrapper>\n      <TimerTitle>{timerTitle} </TimerTitle>\n      <StyledContainer>\n        <StyledItem>\n          <StyledValue>{timeLeft.days}</StyledValue>\n          <StyledSpan>{t('days')}</StyledSpan>\n        </StyledItem>\n\n        <StyledSeparator>:</StyledSeparator>\n\n        <StyledItem>\n          <StyledValue>{timeLeft.hours}</StyledValue>\n          <StyledSpan>{t('hrs')}</StyledSpan>\n        </StyledItem>\n\n        <StyledSeparator>:</StyledSeparator>\n\n        <StyledItem>\n          <StyledValue>{timeLeft.minutes}</StyledValue>\n          <StyledSpan>{t('mins')}</StyledSpan>\n        </StyledItem>\n        <StyledSeparator>:</StyledSeparator>\n\n        <StyledItem>\n          <StyledValue>{timeLeft.seconds}</StyledValue>\n          <StyledSpan>{t('secs')}</StyledSpan>\n        </StyledItem>\n      </StyledContainer>\n    </StyledTimerWrapper>\n  );\n};\n","import styled from 'styled-components';\nexport const TimerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  width: 100%;\n  @media ${p => p.theme.media.tablet} {\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 32px;\n    width: auto;\n  }\n  @media ${p => p.theme.media.desktop} {\n    gap: 74px;\n    align-items: start;\n  }\n`;\n","import { useTranslation } from 'react-i18next';\n\nimport { TimerItem } from 'components/TimerItem/TimerItem';\n\nimport { TimerWrapper } from './Timer.styled';\n\nexport const Timer = ({ endDate }) => {\n  const { t } = useTranslation();\n  const today = new Date();\n  const currentYear = today.getFullYear();\n\n  const endYear = new Date(`${currentYear}`, 12, 0);\n\n  return (\n    <TimerWrapper>\n      <TimerItem selectedDate={endYear} timerTitle={t('yearsCountdown')} />\n      <TimerItem selectedDate={endDate} timerTitle={t('goalsCountdown')} />\n    </TimerWrapper>\n  );\n};\n","import * as Yup from 'yup';\n\nconst now = new Date();\nconst today = Date.parse(now) + 3600 * 1000;\nexport const readingResultSchema = Yup.object().shape({\n  dateInput: Yup.date()\n    // .min(new Date(yesterday), t('results_err1'))\n    .max(\n      new Date(today)\n      // , t('results_err2')\n    ),\n  pageInput: Yup.number()\n    .integer\n    //   t('results_err4')\n    ()\n    .min(\n      1\n      //   t('results_err3')\n    )\n    .max(\n      999\n      //   t('results_err5')\n    )\n    .required\n    // t('results_err6')\n    (),\n});\n","import styled from 'styled-components';\nimport DateView from 'react-datepicker';\nimport { Form } from 'formik';\n\nexport const StyledDateView = styled(DateView)`\n  height: 42px;\n  width: 110px;\n  background-color: #f6f7fb;\n  border: 1px solid #a6abb9;\n  padding-top: 12px;\n  padding-left: 13px;\n  padding-bottom: 13px;\n  color: #242a37;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.21;\n  outline: none;\n`;\n\nexport const StyledField = styled.div`\n  height: 42px;\n  width: 110px;\n  background-color: #f6f7fb;\n  border: 1px solid #a6abb9;\n  padding-top: 12px;\n  padding-left: 13px;\n  padding-bottom: 13px;\n  color: #242a37;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.21;\n`;\nexport const styleForPageInput = {\n  width: '100%',\n  backgroundColor: 'transparent',\n  border: 'none',\n  outline: 'none',\n};\nexport const StyledInputsWrapper = styled.div`\n  display: flex;\n  margin-bottom: 28px;\n  justify-content: space-between;\n`;\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-size: 11px;\n  font-weight: 500;\n  line-height: 1.18;\n  color: #242a37;\n`;\nexport const StyledForm = styled(Form)`\n  display: flex;\n  /* align-items: center; */\n\n  flex-direction: column;\n\n  width: 100%;\n`;\n","// import { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage, Field } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from 'components/StyledButton/StyledButton ';\n// import { trainingThunk } from 'redux/training';\n\n// import ModalFinish from 'components/ModalFinish/ModalFinish';\n\nimport { readingResultSchema } from 'validSchemas/readingResultSchema';\n\nimport {\n  StyledField,\n  StyledDateView,\n  styleForPageInput,\n  StyledInputsWrapper,\n  StyledLabel,\n  StyledForm,\n} from './SendResultsForm.styled';\n\nexport const SendResultsForm = ({ onAddResultClick, completed }) => {\n  const { t } = useTranslation();\n  // const dispatch = useDispatch();\n\n  const initialValues = {\n    dateInput: new Date(),\n    pageInput: '',\n  };\n\n  const handleSubmit = (val, { resetForm }) => {\n    resetForm();\n    onAddResultClick(val);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={readingResultSchema}\n      onSubmit={handleSubmit}\n    >\n      <StyledForm autoComplete=\"off\">\n        <StyledInputsWrapper>\n          <StyledLabel htmlFor=\"dateInput\">\n            {t('date')}\n            <div>\n              <Field name=\"dateInput\">\n                {({ form, field }) => {\n                  const { setFieldValue } = form;\n                  const { value } = field;\n                  return (\n                    <StyledDateView\n                      id=\"dateInput\"\n                      selected={value}\n                      onChange={val => setFieldValue(val)}\n                      closeOnScroll={true}\n                      dateFormat=\" dd.MM.yyyy\"\n                      maxDate={Date.now()}\n                      showDisabledMonthNavigation\n                    />\n                  );\n                }}\n              </Field>\n              <ErrorMessage name=\"dateInput\" />\n            </div>\n          </StyledLabel>\n\n          <StyledLabel htmlFor=\"pageInput\">\n            {t('amountOfPages_results')}\n            <StyledField>\n              <Field\n                type=\"number\"\n                name=\"pageInput\"\n                style={styleForPageInput}\n              ></Field>\n            </StyledField>\n          </StyledLabel>\n        </StyledInputsWrapper>\n        <Button\n          center\n          active\n          textContent={t('addResult')}\n          disabled={completed}\n          size={240}\n          type=\"submit\"\n          height={40}\n        ></Button>\n\n        {/* <button className={s.addResultBtn} type=\"submit\">\n          {}\n        </button> */}\n        {/* {open && <ModalFinish onClose={handleExit} />} */}\n        {/* </form> */}\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledItem = styled.li`\n  display: grid;\n  grid-template-columns: 2fr 2fr 1fr 1fr;\n  list-style: none;\n  color: ${p => p.theme.colors.deepBlue};\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.21;\n  margin-bottom: 4px;\n\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\nexport const StyledCell = styled.span`\n  color: ${p =>\n    p.pale ? p.theme.colors.notActiveText : p.theme.colors.deepBlue};\n  margin-left: auto;\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { StyledItem, StyledCell } from './StatisticsList.styled';\n\nexport const StatisticsRow = ({ row }) => {\n  const { date, time, pages } = row;\n  const { t } = useTranslation();\n\n  return (\n    <StyledItem>\n      <StyledCell>{date}</StyledCell>\n      <StyledCell pale>{time}</StyledCell>\n      <StyledCell>{pages}</StyledCell>\n      <StyledCell pale> &nbsp;{t('results_pages')}</StyledCell>\n    </StyledItem>\n  );\n};\n","import { StatisticsRow } from './StatisticsRow';\nimport * as format from 'helpers/formatDate';\n\nexport const StatisticsList = ({ results }) => {\n  const visibleRows = results\n    ?.map(({ date, pages, _id }) => ({\n      date: format.day(date),\n      time: format.time(date),\n      pages: pages,\n      id: _id,\n    }))\n    .reverse()\n    .slice(0, 5);\n\n  return (\n    <ul>\n      {visibleRows.map(row => (\n        <StatisticsRow key={row.id} row={row} />\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 280px;\n  padding: 20px 20px 22px 20px;\n  gap: 32px;\n  background-color: #ffffff;\n  box-shadow: 0px 2px 3px rgba(9, 30, 63, 0.1);\n\n  @media ${p => p.theme.media.tablet} {\n    flex-direction: row;\n    width: 704px;\n    margin-bottom: 53px;\n    justify-content: space-between;\n  }\n  @media ${p => p.theme.media.desktop} {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\n\nexport const StyledTitle = styled.h2`\n  text-transform: uppercase;\n  font-size: 12px;\n  line-height: 1.25;\n  color: ${p => p.theme.colors.deepBlue};\n  text-align: center;\n  margin-bottom: 12px;\n\n  @media ${p => p.theme.media.tablet} {\n    font-size: 14px;\n    line-height: 1.21;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport { trainingSelectors, trainingThunk } from 'redux/training';\n\nimport { SendResultsForm } from 'components/SendResultsForm/SendResultsForm';\nimport { StatisticsList } from 'components/StatisticsList/StatisticsList';\n\nimport { Wrapper, StyledTitle } from './ReadingInformation.styled';\n\nexport const ReadingInformation = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const results = useSelector(trainingSelectors.results);\n  const completed = useSelector(trainingSelectors.completed);\n\n  const onAddResultClick = async val => {\n    dispatch(trainingThunk.addResultThank(val));\n    // await addResult(val);\n    // dispatch(trainingThunk.getTrainingThank());\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <div>\n          <StyledTitle> {t('results')}</StyledTitle>\n          <SendResultsForm\n            onAddResultClick={onAddResultClick}\n            completed={completed}\n          />\n        </div>\n        <div>\n          <StyledTitle> {t('statistics')}</StyledTitle>\n          <StatisticsList results={results} />\n        </div>\n      </Wrapper>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TrainingContainer = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  /* flex-direction: ${p =>\n    p.trainingStarted ? 'column' : 'column-reverse'}; */\n  gap: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  @media ${p => p.theme.media.tablet} {\n    width: 100%;\n    padding-top: 40px;\n    padding-bottom: 40px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    flex-direction: row;\n    justify-content: space-between;\n    // padding: ${p => p.theme.space[5]}px;\n  }\n`;\n\n//  <StyledContainer>\n//       <WrapperBody>\n//         {isMobileDevice ? (\n//           <CenterFlexBox>\n//             {isTrainingStarted ? (\n//               <></>\n//             ) : (\n//               <>\n//                 <MobileLinkToSecondPage to=\"/mobileTraingBookTable \" />\n//                 <TrainingDataSelection />\n//               </>\n//             )}\n//           </CenterFlexBox>\n//         ) : (\n//           <CenterFlexBox>\n//             {isTrainingStarted ? (\n//               <TrainingContainer trainingStarted>\n//                 <Timer endDate={endDate} />\n//                 <MyGoal\n//                   trainingStarted\n//                   statistic={myGoalParamsTrainingStarted}\n//                 />\n//               </TrainingContainer>\n//             ) : (\n//               <TrainingContainer>\n//                 <TrainingDataSelection />\n//                 <MyGoal statistic={myGoalParams} />\n//               </TrainingContainer>\n//             )}\n\n//             <LibBookTable data={books} training />\n//             {!isTrainingStarted && (\n//               <Button\n//                 onClick={onStartTrainingClick}\n//                 textContent={t('startTraining')}\n//                 active\n//                 size={200}\n//                 disabled={!isExistTrainingDate}\n//                 type=\"button\"\n//               />\n//             )}\n//           </CenterFlexBox>\n//         )}\n//       </WrapperBody>\n//     </StyledContainer>\n//   );\n// };\n","import styled from 'styled-components';\nexport const SiteBar = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  width: 288px;\n  @media ${p => p.theme.media.tablet} {\n    width: 100%;\n  }\n  @media ${p => p.theme.media.desktop} {\n    width: 288px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledModalContentWrapper = styled.div`\n  background-color: rgba(43, 43, 43, 0.1);\n  width: 300px;\n  padding: 20px 10px;\n  text-align: center;\n  svg {\n    margin-bottom: 4px;\n    width: 54px;\n    height: 54px;\n    color: ${p =>\n      p.completenessReason === 'noUnreadBooks'\n        ? p.theme.colors.accentColor\n        : p.theme.colors.iconColor};\n  }\n`;\n\nexport const ModalText = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.38;\n  text-align: center;\n  margin-bottom: 20px;\n  color: ${p => p.theme.colors.deepBlue};\n`;\n","import { Modal } from 'components/Modal/Modal';\nimport { Button } from 'components/StyledButton/StyledButton ';\nimport { FaRegThumbsUp } from 'react-icons/fa';\nimport { StyledModalContentWrapper, ModalText } from './FinishModal.styled';\n\nimport { useTranslation } from 'react-i18next';\n\nexport const FinishModal = ({\n  isModalOpen,\n  onFinishModalBtnClick,\n  completenessReason,\n}) => {\n  const { t } = useTranslation();\n\n  const onNewTrainingAfterFinishBtnClick = () => {\n    onFinishModalBtnClick();\n  };\n  return (\n    <Modal active={isModalOpen}>\n      <StyledModalContentWrapper completenessReason={completenessReason}>\n        <FaRegThumbsUp />\n        {completenessReason === 'noUnreadBooks' && (\n          <ModalText>{t('You_are_the_best')}</ModalText>\n        )}\n        {completenessReason === 'hasDeadlinePassed' && (\n          <ModalText>{t('Youre_doing_fine')}</ModalText>\n        )}\n        <Button\n          active\n          textContent={t('new_training_after_finish')}\n          type=\"button\"\n          size=\"130\"\n          onClick={onNewTrainingAfterFinishBtnClick}\n        />\n        {/* </div> */}\n      </StyledModalContentWrapper>\n    </Modal>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport { convertMs } from 'helpers/convertMs';\nimport { useLogOutRedirect } from 'hooks/useLogOutRedirect';\n\nimport { userSelectors, userThunk } from 'redux/auth';\nimport { trainingSelectors, trainingThunk } from 'redux/training';\nimport {\n  selectedDatesSelectors,\n  selectedDatesActions,\n} from 'redux/selectedDates';\n\nimport { TrainingDataSelection } from 'components/TrainingDataSelection/TrainingDataSelection';\nimport { MyGoal } from 'components/MyGoal/MyGoal';\nimport { BookTableMobile } from 'components/BookTableMobile/BookTableMobile';\nimport { Timer } from 'components/Timer/Timer';\nimport { LibBookTable } from 'components/LibBookTable/LibBookTable';\nimport { ReadingInformation } from 'components/ReadingInformation/ReadingInformation';\nimport { Button } from 'components/StyledButton/StyledButton ';\nimport { MobileLinkToSecondPage } from 'components/MobileLinkToSecondPage/MobileLinkToSecondPage';\nimport { StyledContainer } from 'components/StyledContainer/StyledContainer.styled';\nimport { TrainingContainer } from 'components/TrainingContainer/TrainingContainer';\nimport { CenterFlexBox } from 'components/CenterFlexBox/CenterFlexBox';\nimport { SiteBar } from 'components/SiteBar/SiteBar';\nimport { FinishModal } from 'components/FinishModal/FinishModal';\nimport { LineChart } from 'components/LineChart/LineChart';\n\nconst Training = () => {\n  useLogOutRedirect();\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const isMobileDevice = useMediaQuery({ query: '(max-width: 767px)' });\n  const isDesktop = useMediaQuery({ query: '(min-width: 1280px)' });\n\n  const isTrainingStarted = useSelector(userSelectors.isTrainingStarted);\n\n  const selectedBooks = useSelector(selectedDatesSelectors.booksList);\n  const selectedEndDate = useSelector(selectedDatesSelectors.endDate);\n  const selectedStartDate = useSelector(selectedDatesSelectors.startDate);\n  const deltaSelectedPeriod = selectedEndDate\n    ? selectedEndDate - selectedStartDate\n    : 0;\n  const { days: period } = convertMs(deltaSelectedPeriod);\n\n  const myGoalParams = [\n    { param: 'books', text: t('amountOfBooks'), amount: selectedBooks.length },\n    { param: 'days', text: t('amountOfDays'), amount: period },\n  ];\n  const totalPagesInSelectedBooks = selectedBooks.reduce(\n    (previousValue, book) => previousValue + book.pages,\n    0\n  );\n\n  const books = useSelector(trainingSelectors.booksList);\n  const finishDate = useSelector(trainingSelectors.finishDate);\n  const startDate = useSelector(trainingSelectors.startDate);\n  const id = useSelector(trainingSelectors.id);\n\n  const isTrainingCompleted = useSelector(trainingSelectors.completed);\n\n  const completenessReason = useSelector(trainingSelectors.completenessReason);\n\n  //загалом сторінок в тренуванні\n  const totalPagesInTraining = books.reduce(\n    (previousValue, book) => previousValue + book.pages,\n    0\n  );\n\n  const deltaTime = finishDate ? finishDate - startDate : 0;\n  const { days } = convertMs(deltaTime);\n  const booksLeft = books?.filter(book => book.status !== 'haveRead')?.length;\n  const myGoalParamsTrainingStarted = [\n    { param: 'books', text: t('amountOfBooks'), amount: books?.length },\n    { param: 'days', text: t('amountOfDays'), amount: days },\n    { param: 'booksLeft', text: t('booksLeft'), amount: booksLeft },\n  ];\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  // const [isModalOpen, setIsModalOpen] = useState(true);\n\n  useEffect(() => {\n    if (isTrainingStarted) {\n      dispatch(trainingThunk.getTrainingThank());\n    }\n  }, [dispatch, isTrainingStarted]);\n\n  useEffect(() => {\n    if (isTrainingCompleted) {\n      setIsModalOpen(true);\n    }\n  }, [isTrainingCompleted]);\n\n  const isExistNoSaveTrainingDate =\n    !isTrainingStarted && selectedBooks?.length > 0 && selectedEndDate !== '';\n\n  const onStartTrainingClick = () => {\n    dispatch(userThunk.changeTrainingStatusThunk(true));\n    dispatch(\n      trainingThunk.addTrainingThank({\n        startDate: selectedStartDate,\n        finishDate: selectedEndDate,\n        books: selectedBooks,\n      })\n    );\n    dispatch(selectedDatesActions.resetSelectedDates());\n  };\n\n  const onFinishModalBtnClick = () => {\n    setIsModalOpen(false);\n    dispatch(trainingThunk.deleteTrainingThank(id));\n    dispatch(userThunk.changeTrainingStatusThunk(false));\n  };\n\n  const exception = !isDesktop && isTrainingStarted;\n\n  return (\n    <>\n      <StyledContainer>\n        <CenterFlexBox>\n          {isMobileDevice ? (\n            <>\n              {isTrainingStarted ? (\n                <>\n                  <Timer endDate={finishDate} />\n\n                  <MyGoal\n                    trainingStarted\n                    statistic={myGoalParamsTrainingStarted}\n                  />\n\n                  <BookTableMobile books={books} startedTraining />\n                  <LineChart\n                    days={days}\n                    totalPagesInTraining={totalPagesInTraining}\n                    startDate={startDate}\n                  />\n                </>\n              ) : (\n                <>\n                  <MobileLinkToSecondPage to=\"/mobileTrainingBookTable \" />\n                  <TrainingDataSelection />\n                </>\n              )}\n            </>\n          ) : (\n            <TrainingContainer\n              trainingStarted={isTrainingStarted ? true : false}\n            >\n              <CenterFlexBox>\n                {isTrainingStarted ? (\n                  <>\n                    <Timer endDate={finishDate} />\n                    {exception && (\n                      <MyGoal\n                        trainingStarted\n                        statistic={myGoalParamsTrainingStarted}\n                      />\n                    )}\n                  </>\n                ) : (\n                  <TrainingDataSelection />\n                )}\n\n                <>\n                  <LibBookTable\n                    data={isTrainingStarted ? books : selectedBooks}\n                    startedTraining={isTrainingStarted ? true : false}\n                    training={isTrainingStarted ? false : true}\n                  />\n                  {!isTrainingStarted && (\n                    <Button\n                      onClick={onStartTrainingClick}\n                      textContent={t('startTraining')}\n                      active\n                      size={200}\n                      disabled={!isExistNoSaveTrainingDate}\n                      type=\"button\"\n                    />\n                  )}\n                  <LineChart\n                    startDate={\n                      isTrainingStarted ? startDate : selectedStartDate\n                    }\n                    days={isTrainingStarted ? days : period}\n                    totalPagesInTraining={\n                      isTrainingStarted\n                        ? totalPagesInTraining\n                        : totalPagesInSelectedBooks\n                    }\n                  />\n                  {isTrainingStarted && !isDesktop && <ReadingInformation />}\n                </>\n              </CenterFlexBox>\n              <SiteBar>\n                {!exception && (\n                  <MyGoal\n                    trainingStarted={isTrainingStarted ? true : false}\n                    statistic={\n                      isTrainingStarted\n                        ? myGoalParamsTrainingStarted\n                        : myGoalParams\n                    }\n                  />\n                )}\n                {isTrainingStarted && isDesktop && <ReadingInformation />}\n              </SiteBar>\n            </TrainingContainer>\n          )}\n        </CenterFlexBox>\n      </StyledContainer>\n\n      <FinishModal\n        completenessReason={completenessReason}\n        isModalOpen={isModalOpen}\n        onFinishModalBtnClick={onFinishModalBtnClick}\n      />\n    </>\n  );\n};\n\nexport default Training;\n\n// ['noUnreadBooks', 'hasDeadlinePassed', ''];\n","export const booksList = state => state.training.books;\nexport const startDate = state => state.training.startDate;\nexport const finishDate = state => state.training.finishDate;\nexport const results = state => state.training.results;\nexport const completed = state => state.training.completed;\nexport const id = state => state.training._id;\nexport const completenessReason = state => state.training.completenessReason;\n"],"names":["ChartBox","styled","p","theme","colors","white","media","tablet","space","desktop","StyledTitle","fontSizes","xs","deepBlue","StyledSpan","backgroundStatistic","LineBox","LineList","ss","statisticColor","LineItem","accent","accentColor","StyledP","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","options","responsive","scales","y","display","plugins","legend","title","LineChart","days","totalPagesInTraining","startDate","console","log","t","useTranslation","results","useSelector","trainingSelectors","labelsArr","Array","apply","forEach","_","index","array","format","Date","averageNumberOfPagesPerDay","planArr","Math","round","resultsByDay","reduce","obj","result","day","date","pages","factArr","acc","data","arr","resultDates","Object","keys","lastDate","length","indexLastDate","indexOf","lab","plan","fact","labels","datasets","label","lineTension","borderColor","pointBackgroundColor","pointHoverRadius","pointRadius","PointHitRadius","StyledLink","Link","MobileLinkToSecondPage","to","MyGoalMainBox","StatsBox","isTrainingStarted","MyGoalStatsList","MyGoalStatsListItem","MyGoalStatsDigitBox","xxl","param","xl","MyGoalStatsText","fontWeights","normal","s","lineHeights","secondBody","notActiveText","MyGoal","trainingStarted","statistic","TrainingTitle","text","map","amount","bold","m","backgroundTitle","convertMs","ms","minute","second","hour","floor","hours","minutes","seconds","parse","time","dayLikeChartLabel","StyledForm","Form","Wrapper","initialValues","book","validationSchema","Yup","required","SelectBooks","dispatch","useDispatch","books","booksSelectors","filter","status","defaultValue","onSubmit","val","resetForm","newBook","find","_id","selectedDatesActions","name","as","value","hidden","disabled","size","textContent","type","TrainingWrapper","StyledControlsWrapper","backgroundBody","iconColor","TrainingDataSelection","start","state","selectedDates","end","endDate","useState","setStartDate","setEndDate","useEffect","valueOf","showIcon","selected","onChange","closeOnScroll","dateFormat","selectsStart","minDate","now","showDisabledMonthNavigation","placeholderText","selectsEnd","StyledTimerWrapper","TimerTitle","StyledContainer","StyledItem","StyledValue","StyledSeparator","TimerItem","selectedDate","timerTitle","setTime","intervalId","useRef","deltaTime","timeLeft","current","clearInterval","setInterval","TimerWrapper","Timer","currentYear","getFullYear","endYear","today","readingResultSchema","shape","dateInput","max","pageInput","integer","min","StyledDateView","DateView","StyledField","styleForPageInput","width","backgroundColor","border","outline","StyledInputsWrapper","StyledLabel","SendResultsForm","onAddResultClick","completed","autoComplete","htmlFor","form","field","setFieldValue","id","maxDate","style","center","active","height","StyledCell","pale","StatisticsRow","row","StatisticsList","visibleRows","reverse","slice","ReadingInformation","trainingThunk","TrainingContainer","SiteBar","StyledModalContentWrapper","completenessReason","ModalText","FinishModal","isModalOpen","onFinishModalBtnClick","Modal","onClick","useLogOutRedirect","isMobileDevice","useMediaQuery","query","isDesktop","userSelectors","selectedBooks","selectedDatesSelectors","selectedEndDate","selectedStartDate","deltaSelectedPeriod","period","myGoalParams","totalPagesInSelectedBooks","previousValue","finishDate","isTrainingCompleted","booksLeft","myGoalParamsTrainingStarted","setIsModalOpen","isExistNoSaveTrainingDate","exception","CenterFlexBox","M","BookTableMobile","startedTraining","LibBookTable","training","userThunk","booksList"],"sourceRoot":""}