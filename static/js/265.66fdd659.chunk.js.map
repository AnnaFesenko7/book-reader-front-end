{"version":3,"file":"static/js/265.66fdd659.chunk.js","mappings":"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","sources":["components/CenterFlexBox/CenterFlexBox.js","components/MobileLinkToSecondPage/MobileLinkToSecondPage.js","helpers/convertMs.js","redux/training/trainingSelectors.js","components/TrainingTitle/TrainingTitle.js","components/SelectBooks/SelectBooks.styled.js","components/SelectBooks/SelectBooks.js","components/TrainingDataSelection/TrainingDataSelection.style.js","components/TrainingDataSelection/TrainingDataSelection.js","components/MyGoal/MyGoal.styled.js","components/MyGoal/MyGoal.js","components/TimerItem/TimerItem.styled.js","components/TimerItem/TimerItem.js","components/Timer/Timer.styled.js","components/Timer/Timer.js","validSchemas/readingResultSchema.js","components/SendResultsForm/SendResultsForm.styled.js","components/SendResultsForm/SendResultsForm.js","components/StatisticsList/StatisticsList.styled.js","components/StatisticsList/StatisticsRow.js","helpers/formatDate.js","components/StatisticsList/StatisticsList.js","components/ReadingInformation/ReadingInformation.styled.js","components/ReadingInformation/ReadingInformation.js","components/TrainingContainer/TrainingContainer.js","components/SiteBar/SiteBar.js","components/FinishModal/FinishModal.styled.js","components/FinishModal/FinishModal.js","components/LineChart/LineChart.styled.js","components/LineChart/LineChart.js","pages/Training.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CenterFlexBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  /* justify-content: center; */\n  @media ${p => p.theme.media.tablet} {\n    gap: ${p => p.theme.space[6]}px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    /* gap: ${p => p.theme.space[6]}px; */\n    gap: 0;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaArrowLeft } from 'react-icons/fa';\n\nconst StyledLink = styled(Link)`\n  color: ${p => p.theme.colors.accentColor};\n  display: block;\n  margin-top: 40px;\n  align-self: start;\n  margin-left: 16px;\n`;\n\nexport const MobileLinkToSecondPage = ({ to }) => {\n  return (\n    <StyledLink to={to}>\n      <FaArrowLeft />\n    </StyledLink>\n  );\n};\n","export function convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  //  Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n","export const booksList = state => state.training.books;\nexport const startDate = state => state.training.startDate;\nexport const finishDate = state => state.training.finishDate;\nexport const results = state => state.training.results;\nexport const completed = state => state.training.completed;\nexport const id = state => state.training._id;\nexport const completenessReason = state => state.training.completenessReason;\n","import styled from 'styled-components';\n\nconst StyledTitle = styled.h2`\n  width: 100%;\n  height: 60px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: ${p => p.theme.lineHeights.secondBody};\n\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.backgroundTitle};\n  box-shadow: 0px 2px 3px rgba(9, 30, 63, 0.1);\n\n  @media ${p => p.theme.media.desktop} {\n    /* width: 288px !important; */\n  }\n`;\nexport const TrainingTitle = ({ text }) => {\n  return <StyledTitle>{text}</StyledTitle>;\n};\n","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n\n  @media ${p => p.theme.media.tablet} {\n    flex-direction: row;\n    align-items: flex-start;\n    justify-content: space-between;\n  }\n\n  select {\n    display: block;\n    width: 100%;\n    height: 40px;\n    padding: 2px 32px 2px 12px;\n    background-color: ${p => p.theme.colors.white};\n    outline: none;\n    border: none;\n    color: ${p => p.theme.colors.deepBlue};\n\n    @media ${p => p.theme.media.tablet} {\n      width: 483px;\n    }\n    @media ${p => p.theme.media.desktop} {\n      width: 715px;\n    }\n  }\n`;\nexport const Wrapper = styled.div`\n  width: 100%;\n\n  @media ${p => p.theme.media.tablet} {\n    width: 483px;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    width: 715px;\n  }\n`;\n","import { useTranslation } from 'react-i18next';\nimport { selectedDatesActions } from 'redux/selectedDates';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { booksSelectors } from 'redux/books';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Button } from 'components/StyledButton/StyledButton ';\nimport { ErrorContainer } from 'components/ErrorContainer/ErrorContainer.styled';\n\nimport { StyledForm, Wrapper } from './SelectBooks.styled';\n\nconst initialValues = {\n  book: '',\n};\nconst validationSchema = Yup.object({\n  book: Yup.string().required('Please select a book'),\n});\n\nexport const SelectBooks = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const booksList = useSelector(booksSelectors.getBooks);\n  const books = booksList.filter(book => book.status === 'toRead');\n\n  const defaultValue = t('chooseBooks');\n\n  const onSubmit = (val, { resetForm }) => {\n    // const isBookAlreadySelected = selectedBooks.some(({ _id }) => _id === book);\n    // if (isBookAlreadySelected) {\n    //   throw Error('This book already selected');\n    // }\n    const newBook = books.find(book => book._id === val.book);\n\n    resetForm();\n    dispatch(selectedDatesActions.addBook(newBook));\n  };\n\n  return (\n    <Formik\n      onSubmit={onSubmit}\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n    >\n      <StyledForm>\n        <Wrapper>\n          <Field name=\"book\" as=\"select\">\n            <option value=\"\" hidden disabled>\n              {defaultValue}\n            </option>\n            {books.map(book => (\n              <option value={book._id} key={book._id}>\n                {book.title}\n              </option>\n            ))}\n          </Field>\n          <ErrorContainer>\n            {/* {isBookAlreadySelected && <p>This book already selected</p>} */}\n            <ErrorMessage name=\"book\" />\n          </ErrorContainer>\n        </Wrapper>\n\n        <Button size={170} textContent={t('btnAdd')} type=\"submit\" />\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TrainingWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: 14px;\n  line-height: 1.21;\n  gap: 20px;\n  padding: ${p => p.theme.space[5]}px;\n\n  @media ${p => p.theme.media.tablet} {\n    gap: 24px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    width: 928px;\n    gap: 32px;\n    padding: 0;\n  }\n`;\n\nexport const StyledControlsWrapper = styled.div`\n  input {\n    display: block;\n    width: 100%;\n    height: 40px;\n    padding: 2px 31px 2px 40px !important;\n    background-color: ${p => p.theme.colors.backgroundBody};\n    border: 1px solid #a6abb9;\n    margin-bottom: 20px;\n    @media screen and (min-width: 768px) {\n      width: 250px;\n      margin: 0;\n    }\n  }\n  div {\n    z-index: 10;\n  }\n  svg {\n    z-index: 5;\n    padding: 0 !important;\n    position: absolute;\n    top: 12px;\n    left: 12px;\n    width: 17px;\n    height: 17px;\n    fill: ${p => p.theme.colors.iconColor};\n  }\n\n  @media ${p => p.theme.media.tablet} {\n    display: flex;\n    gap: 40px;\n    align-self: flex-start;\n  }\n  @media ${p => p.theme.media.desktop} {\n    align-self: center;\n    gap: 40px;\n  }\n`;\n\nexport const TrainingContainer = styled.div`\n  min-width: 320px;\n  margin-left: auto;\n  margin-right: auto;\n  /* padding: 32px 20px; */\n  background-color: #f6f7fb;\n  @media screen and (min-width: 768px) {\n    min-width: 768px;\n    padding: 40px 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n`;\n\nexport const TrainingMaine = styled.div`\n  @media screen and (min-width: 1280px) {\n    width: 928px;\n  }\n`;\n\nexport const TrainingSidebar = styled.div`\n  @media screen and (min-width: 1280px) {\n    width: 288px;\n  }\n`;\n","import DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport { selectedDatesActions } from 'redux/selectedDates';\n\nimport { TrainingTitle } from 'components/TrainingTitle/TrainingTitle';\nimport { SelectBooks } from 'components/SelectBooks/SelectBooks';\nimport {\n  StyledControlsWrapper,\n  TrainingWrapper,\n} from './TrainingDataSelection.style';\n\nexport const TrainingDataSelection = () => {\n  const { t } = useTranslation();\n  const start = useSelector(state => state.selectedDates.startDate);\n  const end = useSelector(state => state.selectedDates.endDate);\n  const [startDate, setStartDate] = useState(start);\n  const [endDate, setEndDate] = useState(end);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const data = startDate.valueOf();\n\n    dispatch(selectedDatesActions.startDate(data));\n  }, [dispatch, startDate]);\n\n  useEffect(() => {\n    const data = endDate.valueOf();\n\n    dispatch(selectedDatesActions.endDate(data));\n  }, [dispatch, endDate]);\n\n  return (\n    <>\n      <TrainingWrapper>\n        <TrainingTitle text={t('myTraining')} />\n        <StyledControlsWrapper>\n          <DatePicker\n            showIcon\n            selected={start}\n            onChange={date => setStartDate(date)}\n            closeOnScroll={true}\n            dateFormat=\"MMMM d, yyyy h:mm aa\"\n            selectsStart\n            minDate={Date.now()}\n            showDisabledMonthNavigation\n            placeholderText={t('start')}\n          />\n\n          <DatePicker\n            showIcon\n            selected={end}\n            onChange={date => setEndDate(date)}\n            closeOnScroll={true}\n            dateFormat=\"MMMM d, yyyy h:mm aa\"\n            selectsEnd\n            minDate={startDate}\n            showDisabledMonthNavigation\n            placeholderText={t('finish')}\n          />\n        </StyledControlsWrapper>\n        <SelectBooks />\n      </TrainingWrapper>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MyGoalMainBox = styled.div`\n  width: 100%;\n  background-color: white;\n  box-shadow: 0px 2px 3px rgba(9, 30, 63, 0.1);\n\n  @media ${p => p.theme.media.tablet} {\n    padding-left: ${p => p.theme.space[5]}px;\n    padding-right: ${p => p.theme.space[5]}px;\n\n    display: flex;\n    align-items: baseline;\n\n    h2 {\n      width: 275px;\n    }\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    padding-left: 0;\n    padding-right: 0;\n    width: 288px;\n\n    display: block;\n    h2 {\n      width: 100%;\n    }\n  }\n`;\n\nexport const StatsBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: ${p => (p.isTrainingStarted ? 161 : 236)}px;\n  background-color: white;\n  box-shadow: 0px 2px 3px rgba(9, 30, 63, 0.1);\n\n  @media ${p => p.theme.media.tablet} {\n    height: 105px;\n    box-shadow: none;\n    margin-left: auto;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    height: ${p => (p.isTrainingStarted ? 269 : 244)}px;\n  }\n`;\n\nexport const MyGoalStatsList = styled.ul`\n  display: flex;\n  justify-content: center;\n\n  width: 100%;\n  gap: 20px;\n  padding: ${p => p.theme.space[5]}px;\n\n  @media ${p => p.theme.media.tablet} {\n    align-items: baseline;\n    gap: ${p => (p.isTrainingStarted ? 12 : 40)}px;\n    padding: 0;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    gap: 20px;\n    margin: 0;\n  }\n`;\n\nexport const MyGoalStatsListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media ${p => p.theme.media.tablet} {\n    height: 60px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    height: 148px;\n    width: ${p => p.isTrainingStarted && 70}px;\n  }\n`;\n\nexport const MyGoalStatsDigitBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: ${p => (p.isTrainingStarted ? 66 : 100)}px;\n  height: ${p => (p.isTrainingStarted ? 66 : 100)}px;\n  background: ${p => p.theme.colors.backgroundStatistic};\n  box-shadow: 4px 4px 8px rgba(36, 42, 55, 0.15);\n\n  font-family: Open Sans;\n  font-weight: 700;\n  font-size: ${p => p.theme.fontSizes.xxl};\n  line-height: 1.18;\n  text-align: center;\n  color: ${p => {\n    // console.log(p.booksLeft);\n    return p.param === 'booksLeft'\n      ? `${p.theme.colors.accentColor}`\n      : `${p.theme.colors.statisticColor}`;\n  }};\n\n  @media ${p => p.theme.media.tablet} {\n    font-size: ${p => p.theme.fontSizes.xl};\n    width: 100px;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    width: ${p => (p.isTrainingStarted ? 66 : 100)}px;\n    height: ${p => (p.isTrainingStarted ? 66 : 100)}px;\n  }\n`;\n\nexport const MyGoalStatsText = styled.span`\n  width: 100%;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p =>\n    p.isTrainingStarted ? `${p.theme.fontSizes.xs}` : `${p.theme.fontSizes.s}`};\n  line-height: ${p => p.theme.lineHeights.secondBody};\n  text-align: center;\n  color: ${p => p.theme.colors.notActiveText};\n\n  display: flex;\n  justify-content: center;\n  margin-top: 14px;\n\n  @media ${p => p.theme.media.tablet} {\n    max-width: 100px;\n    font-size: ${p => p.theme.fontSizes.ss};\n    margin-top: 0;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    font-size: ${p =>\n      p.isTrainingStarted\n        ? `${p.theme.fontSizes.xs}`\n        : `${p.theme.fontSizes.s}`};\n    margin-top: 14px;\n  }\n`;\n","import { useTranslation } from 'react-i18next';\n\nimport { TrainingTitle } from 'components/TrainingTitle/TrainingTitle';\nimport {\n  MyGoalMainBox,\n  StatsBox,\n  MyGoalStatsList,\n  MyGoalStatsListItem,\n  MyGoalStatsDigitBox,\n  MyGoalStatsText,\n} from './MyGoal.styled';\n\nexport const MyGoal = ({ trainingStarted, statistic }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <MyGoalMainBox>\n        <TrainingTitle text={t('myGoals')} />\n\n        <StatsBox isTrainingStarted={trainingStarted}>\n          <MyGoalStatsList isTrainingStarted={trainingStarted}>\n            {statistic.map(({ param, text, amount }) => (\n              <MyGoalStatsListItem\n                key={param}\n                isTrainingStarted={trainingStarted}\n              >\n                <MyGoalStatsDigitBox\n                  param={param}\n                  isTrainingStarted={trainingStarted}\n                >\n                  {amount}\n                </MyGoalStatsDigitBox>\n                <MyGoalStatsText isTrainingStarted={trainingStarted}>\n                  {text}\n                </MyGoalStatsText>\n              </MyGoalStatsListItem>\n            ))}\n          </MyGoalStatsList>\n        </StatsBox>\n      </MyGoalMainBox>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledTimerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  @media ${p => p.theme.media.tablet} {\n    width: 290px;\n  }\n`;\n\nexport const TimerTitle = styled.div`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.21;\n  color: #898f9f;\n  margin-bottom: 8px;\n`;\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  align-items: start;\n  justify-content: center;\n  width: 100%;\n  height: 60px;\n\n  background: #ffffff;\n  box-shadow: 4px 4px 8px rgba(36, 42, 55, 0.15);\n  padding-bottom: 8px;\n`;\nexport const StyledItem = styled.p`\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  text-align: center;\n  width: 43px;\n\n  :not(:last-child) {\n    margin-right: 8px;\n  }\n`;\n\nexport const StyledValue = styled.span`\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 25px;\n  line-height: 1.52;\n\n  color: #091e3f;\n`;\nexport const StyledSeparator = styled.span`\n  font-weight: 700;\n  font-size: 25px;\n  line-height: 1.52;\n  margin-right: 8px;\n`;\n\nexport const StyledSpan = styled.span`\n  font-weight: 500;\n  font-size: 10px;\n  line-height: 12px;\n  text-align: center;\n\n  color: #898f9f;\n`;\n","import { useTranslation } from 'react-i18next';\n\nimport {\n  StyledContainer,\n  StyledItem,\n  StyledValue,\n  StyledTimerWrapper,\n  TimerTitle,\n  StyledSpan,\n  StyledSeparator,\n} from './TimerItem.styled.js';\nimport { useState, useEffect, useRef } from 'react';\nimport { convertMs } from 'helpers/convertMs.js';\n\nexport const TimerItem = ({ selectedDate, timerTitle }) => {\n  const [time, setTime] = useState(() => Date.now());\n  const { t } = useTranslation();\n  const intervalId = useRef(null);\n  const deltaTime = selectedDate - time;\n  const timeLeft = convertMs(deltaTime);\n\n  useEffect(() => {\n    if (intervalId.current === null) {\n      intervalId.current = setInterval(() => {\n        setTime(Date.now());\n      }, 1000);\n      return;\n    }\n    return clearInterval(intervalId);\n  }, []);\n\n  return (\n    <StyledTimerWrapper>\n      <TimerTitle>{timerTitle} </TimerTitle>\n      <StyledContainer>\n        <StyledItem>\n          <StyledValue>{timeLeft.days}</StyledValue>\n          <StyledSpan>{t('days')}</StyledSpan>\n        </StyledItem>\n\n        <StyledSeparator>:</StyledSeparator>\n\n        <StyledItem>\n          <StyledValue>{timeLeft.hours}</StyledValue>\n          <StyledSpan>{t('hrs')}</StyledSpan>\n        </StyledItem>\n\n        <StyledSeparator>:</StyledSeparator>\n\n        <StyledItem>\n          <StyledValue>{timeLeft.minutes}</StyledValue>\n          <StyledSpan>{t('mins')}</StyledSpan>\n        </StyledItem>\n        <StyledSeparator>:</StyledSeparator>\n\n        <StyledItem>\n          <StyledValue>{timeLeft.seconds}</StyledValue>\n          <StyledSpan>{t('secs')}</StyledSpan>\n        </StyledItem>\n      </StyledContainer>\n    </StyledTimerWrapper>\n  );\n};\n","import styled from 'styled-components';\nexport const TimerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  width: 100%;\n  @media ${p => p.theme.media.tablet} {\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 32px;\n    width: auto;\n  }\n  @media ${p => p.theme.media.desktop} {\n    gap: 74px;\n    align-items: start;\n  }\n`;\n","import { useTranslation } from 'react-i18next';\n\nimport { TimerItem } from 'components/TimerItem/TimerItem';\n\nimport { TimerWrapper } from './Timer.styled';\n\nexport const Timer = ({ endDate }) => {\n  const { t } = useTranslation();\n  const today = new Date();\n  const currentYear = today.getFullYear();\n\n  const endYear = new Date(`${currentYear}`, 12, 0);\n\n  return (\n    <TimerWrapper>\n      <TimerItem selectedDate={endYear} timerTitle={t('yearsCountdown')} />\n      <TimerItem selectedDate={endDate} timerTitle={t('goalsCountdown')} />\n    </TimerWrapper>\n  );\n};\n","import * as Yup from 'yup';\n\nconst now = new Date();\nconst today = Date.parse(now) + 3600 * 1000;\nexport const readingResultSchema = Yup.object().shape({\n  dateInput: Yup.date()\n    // .min(new Date(yesterday), t('results_err1'))\n    .max(\n      new Date(today)\n      // , t('results_err2')\n    ),\n  pageInput: Yup.number()\n    .integer\n    //   t('results_err4')\n    ()\n    .min(\n      1\n      //   t('results_err3')\n    )\n    .max(\n      999\n      //   t('results_err5')\n    )\n    .required\n    // t('results_err6')\n    (),\n});\n","import styled from 'styled-components';\nimport DateView from 'react-datepicker';\nimport { Form } from 'formik';\n\nexport const StyledDateView = styled(DateView)`\n  height: 42px;\n  width: 110px;\n  background-color: #f6f7fb;\n  border: 1px solid #a6abb9;\n  padding-top: 12px;\n  padding-left: 13px;\n  padding-bottom: 13px;\n  color: #242a37;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.21;\n  outline: none;\n`;\n\nexport const StyledField = styled.div`\n  height: 42px;\n  width: 110px;\n  background-color: #f6f7fb;\n  border: 1px solid #a6abb9;\n  padding-top: 12px;\n  padding-left: 13px;\n  padding-bottom: 13px;\n  color: #242a37;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.21;\n`;\nexport const styleForPageInput = {\n  width: '100%',\n  backgroundColor: 'transparent',\n  border: 'none',\n  outline: 'none',\n};\nexport const StyledInputsWrapper = styled.div`\n  display: flex;\n  margin-bottom: 28px;\n  justify-content: space-between;\n`;\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-size: 11px;\n  font-weight: 500;\n  line-height: 1.18;\n  color: #242a37;\n`;\nexport const StyledForm = styled(Form)`\n  display: flex;\n  /* align-items: center; */\n\n  flex-direction: column;\n\n  width: 100%;\n`;\n","// import { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage, Field } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from 'components/StyledButton/StyledButton ';\n// import { trainingThunk } from 'redux/training';\n\n// import ModalFinish from 'components/ModalFinish/ModalFinish';\n\nimport { readingResultSchema } from 'validSchemas/readingResultSchema';\n\nimport {\n  StyledField,\n  StyledDateView,\n  styleForPageInput,\n  StyledInputsWrapper,\n  StyledLabel,\n  StyledForm,\n} from './SendResultsForm.styled';\n\nexport const SendResultsForm = ({ onAddResultClick, completed }) => {\n  const { t } = useTranslation();\n  // const dispatch = useDispatch();\n\n  const initialValues = {\n    dateInput: new Date(),\n    pageInput: '',\n  };\n\n  const handleSubmit = (val, { resetForm }) => {\n    resetForm();\n    onAddResultClick(val);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={readingResultSchema}\n      onSubmit={handleSubmit}\n    >\n      <StyledForm autoComplete=\"off\">\n        <StyledInputsWrapper>\n          <StyledLabel htmlFor=\"dateInput\">\n            {t('date')}\n            <div>\n              <Field name=\"dateInput\">\n                {({ form, field }) => {\n                  const { setFieldValue } = form;\n                  const { value } = field;\n                  return (\n                    <StyledDateView\n                      id=\"dateInput\"\n                      selected={value}\n                      onChange={val => setFieldValue(val)}\n                      closeOnScroll={true}\n                      dateFormat=\" dd.MM.yyyy\"\n                      maxDate={Date.now()}\n                      showDisabledMonthNavigation\n                    />\n                  );\n                }}\n              </Field>\n              <ErrorMessage name=\"dateInput\" />\n            </div>\n          </StyledLabel>\n\n          <StyledLabel htmlFor=\"pageInput\">\n            {t('amountOfPages_results')}\n            <StyledField>\n              <Field\n                type=\"number\"\n                name=\"pageInput\"\n                style={styleForPageInput}\n              ></Field>\n            </StyledField>\n          </StyledLabel>\n        </StyledInputsWrapper>\n        <Button\n          center\n          active\n          textContent={t('addResult')}\n          disabled={completed}\n          size={240}\n          type=\"submit\"\n          height={40}\n        ></Button>\n\n        {/* <button className={s.addResultBtn} type=\"submit\">\n          {}\n        </button> */}\n        {/* {open && <ModalFinish onClose={handleExit} />} */}\n        {/* </form> */}\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledItem = styled.li`\n  display: grid;\n  grid-template-columns: 2fr 2fr 1fr 1fr;\n  list-style: none;\n  color: ${p => p.theme.colors.deepBlue};\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.21;\n  margin-bottom: 4px;\n\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\nexport const StyledCell = styled.span`\n  color: ${p =>\n    p.pale ? p.theme.colors.notActiveText : p.theme.colors.deepBlue};\n  margin-left: auto;\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { StyledItem, StyledCell } from './StatisticsList.styled';\n\nexport const StatisticsRow = ({ row }) => {\n  const { date, time, pages } = row;\n  const { t } = useTranslation();\n\n  return (\n    <StyledItem>\n      <StyledCell>{date}</StyledCell>\n      <StyledCell pale>{time}</StyledCell>\n      <StyledCell>{pages}</StyledCell>\n      <StyledCell pale> &nbsp;{t('results_pages')}</StyledCell>\n    </StyledItem>\n  );\n};\n","import { format } from 'date-fns';\n\nexport const day = date => {\n  return format(Date.parse(date), 'dd.MM.yyyy');\n};\nexport const time = date => {\n  return format(Date.parse(date), 'HH:mm:ss');\n};\nexport const dayLikeChartLabel = date => {\n  return format(Date.parse(date), 'dd.MM');\n};\n","import { StatisticsRow } from './StatisticsRow';\nimport * as format from 'helpers/formatDate';\n\nexport const StatisticsList = ({ results }) => {\n  const visibleRows = results\n    ?.map(({ date, pages, _id }) => ({\n      date: format.day(date),\n      time: format.time(date),\n      pages: pages,\n      id: _id,\n    }))\n    .reverse()\n    .slice(0, 5);\n\n  return (\n    <ul>\n      {visibleRows.map(row => (\n        <StatisticsRow key={row.id} row={row} />\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 280px;\n  padding: 20px 20px 22px 20px;\n  gap: 32px;\n  background-color: #ffffff;\n  box-shadow: 0px 2px 3px rgba(9, 30, 63, 0.1);\n\n  @media ${p => p.theme.media.tablet} {\n    flex-direction: row;\n    width: 704px;\n    margin-bottom: 53px;\n    justify-content: space-between;\n  }\n  @media ${p => p.theme.media.desktop} {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\n\nexport const StyledTitle = styled.h2`\n  text-transform: uppercase;\n  font-size: 12px;\n  line-height: 1.25;\n  color: ${p => p.theme.colors.deepBlue};\n  text-align: center;\n  margin-bottom: 12px;\n\n  @media ${p => p.theme.media.tablet} {\n    font-size: 14px;\n    line-height: 1.21;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport { trainingSelectors, trainingThunk } from 'redux/training';\n\nimport { SendResultsForm } from 'components/SendResultsForm/SendResultsForm';\nimport { StatisticsList } from 'components/StatisticsList/StatisticsList';\n\nimport { Wrapper, StyledTitle } from './ReadingInformation.styled';\n\nexport const ReadingInformation = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const results = useSelector(trainingSelectors.results);\n  const completed = useSelector(trainingSelectors.completed);\n\n  const onAddResultClick = async val => {\n    dispatch(trainingThunk.addResultThank(val));\n    // await addResult(val);\n    // dispatch(trainingThunk.getTrainingThank());\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <div>\n          <StyledTitle> {t('results')}</StyledTitle>\n          <SendResultsForm\n            onAddResultClick={onAddResultClick}\n            completed={completed}\n          />\n        </div>\n        <div>\n          <StyledTitle> {t('statistics')}</StyledTitle>\n          <StatisticsList results={results} />\n        </div>\n      </Wrapper>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TrainingContainer = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  /* flex-direction: ${p =>\n    p.trainingStarted ? 'column' : 'column-reverse'}; */\n  gap: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  @media ${p => p.theme.media.tablet} {\n    width: 100%;\n    padding-top: 40px;\n    padding-bottom: 40px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    flex-direction: row;\n    justify-content: space-between;\n    // padding: ${p => p.theme.space[5]}px;\n  }\n`;\n\n//  <StyledContainer>\n//       <WrapperBody>\n//         {isMobileDevice ? (\n//           <CenterFlexBox>\n//             {isTrainingStarted ? (\n//               <></>\n//             ) : (\n//               <>\n//                 <MobileLinkToSecondPage to=\"/mobileTraingBookTable \" />\n//                 <TrainingDataSelection />\n//               </>\n//             )}\n//           </CenterFlexBox>\n//         ) : (\n//           <CenterFlexBox>\n//             {isTrainingStarted ? (\n//               <TrainingContainer trainingStarted>\n//                 <Timer endDate={endDate} />\n//                 <MyGoal\n//                   trainingStarted\n//                   statistic={myGoalParamsTrainingStarted}\n//                 />\n//               </TrainingContainer>\n//             ) : (\n//               <TrainingContainer>\n//                 <TrainingDataSelection />\n//                 <MyGoal statistic={myGoalParams} />\n//               </TrainingContainer>\n//             )}\n\n//             <LibBookTable data={books} training />\n//             {!isTrainingStarted && (\n//               <Button\n//                 onClick={onStartTrainingClick}\n//                 textContent={t('startTraining')}\n//                 active\n//                 size={200}\n//                 disabled={!isExistTrainingDate}\n//                 type=\"button\"\n//               />\n//             )}\n//           </CenterFlexBox>\n//         )}\n//       </WrapperBody>\n//     </StyledContainer>\n//   );\n// };\n","import styled from 'styled-components';\nexport const SiteBar = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  width: 288px;\n  @media ${p => p.theme.media.tablet} {\n    width: 100%;\n  }\n  @media ${p => p.theme.media.desktop} {\n    width: 288px;\n  }\n`;\n","import styled from 'styled-components';\nimport { FaRegThumbsUp } from 'react-icons/fa';\n\nexport const ThumbUpIcon = styled(FaRegThumbsUp)`\n  margin-bottom: 4px;\n  width: 54px;\n  height: 54px;\n  color: ${p =>\n    p.completenessReason === 'noUnreadBooks'\n      ? p.theme.colors.accentColor\n      : p.theme.colors.iconColor};\n`;\n\nexport const StyledModalContentWrapper = styled.div`\n  background-color: rgba(43, 43, 43, 0.1);\n  width: 300px;\n  padding: 20px 10px;\n  text-align: center;\n`;\n\nexport const ModalText = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.38;\n  text-align: center;\n  margin-bottom: 20px;\n  color: ${p => p.theme.colors.deepBlue};\n`;\n","import { Modal } from 'components/Modal/Modal';\nimport { Button } from 'components/StyledButton/StyledButton ';\n\nimport {\n  ThumbUpIcon,\n  StyledModalContentWrapper,\n  ModalText,\n} from './FinishModal.styled';\n\nimport { useTranslation } from 'react-i18next';\n\nexport const FinishModal = ({\n  isModalOpen,\n  onFinishModalBtnClick,\n  completenessReason,\n}) => {\n  const { t } = useTranslation();\n\n  const onNewTrainingAfterFinishBtnClick = () => {\n    onFinishModalBtnClick();\n  };\n  return (\n    <Modal active={isModalOpen}>\n      <StyledModalContentWrapper>\n        <ThumbUpIcon completenessReason={completenessReason} />\n        {completenessReason === 'noUnreadBooks' && (\n          <ModalText>{t('You_are_the_best')}</ModalText>\n        )}\n        {completenessReason === 'hasDeadlinePassed' && (\n          <ModalText>{t('Youre_doing_fine')}</ModalText>\n        )}\n        <Button\n          active\n          textContent={t('new_training_after_finish')}\n          type=\"button\"\n          size=\"130\"\n          onClick={onNewTrainingAfterFinishBtnClick}\n        />\n        {/* </div> */}\n      </StyledModalContentWrapper>\n    </Modal>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ChartBox = styled.div`\n  position: relative;\n  padding: 14px 22px;\n  background-color: ${p => p.theme.colors.white};\n  width: 100%;\n  height: 75%;\n  @media ${p => p.theme.media.tablet} {\n    padding: 25px 35px;\n    height: 90%;\n    /* margin-top: ${p => p.theme.space[6]}px; */\n  }\n  @media ${p => p.theme.media.desktop} {\n    margin-top: ${p => p.theme.space[6]}px;\n  }\n`;\n\nexport const StyledTitle = styled.p`\n  font-weight: 500;\n  font-size: ${p => p.theme.fontSizes.xs};\n  text-transform: uppercase;\n  margin-bottom: 24px;\n  color: ${p => p.theme.colors.deepBlue};\n`;\n\nexport const StyledSpan = styled.span`\n  font-weight: 600;\n  font-size: ${p => p.theme.fontSizes.xs};\n  text-transform: uppercase;\n  text-align: center;\n  width: 25px;\n  height: 25px;\n  padding: 6px 8px;\n  margin-left: 8px;\n  color: ${p => p.theme.colors.deepBlue};\n  background-color: ${p => p.theme.colors.backgroundStatistic};\n`;\n\nexport const LineBox = styled.div`\n  position: absolute;\n  height: auto;\n  right: 10px;\n  top: 100px;\n  @media ${p => p.theme.media.tablet} {\n    right: 0px;\n    top: 130px;\n  }\n`;\n\nexport const LineList = styled.ul`\n  padding: 0px;\n  margin: 0px;\n  text-align: right;\n\n  font-weight: 600;\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 2.5;\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.statisticColor};\n`;\n\nexport const LineItem = styled.li`\n  width: 50px;\n  height: 30px;\n  margin-right: 11px;\n  background-color: rgba(245, 247, 250, 0.85);\n  box-shadow: 0px 2px 3px rgba(9, 30, 63, 0.1);\n  text-align: center;\n  color: ${p =>\n    p.accent ? p.theme.colors.accentColor : p.theme.colors.statisticColor};\n  margin-bottom: 16px;\n\n  @media ${p => p.theme.media.tablet} {\n    margin-right: 45px;\n  }\n`;\n\nexport const StyledP = styled.p`\n  display: flex;\n  justify-content: flex-end;\n  position: relative;\n  bottom: 15px;\n  right: 12px;\n\n  font-weight: 600;\n  font-size: ${p => p.theme.fontSizes.xs};\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.statisticColor};\n  margin-top: 16px;\n`;\n","import { Line } from 'react-chartjs-2';\nimport { useSelector } from 'react-redux';\nimport { trainingSelectors } from 'redux/training';\nimport * as format from 'helpers/formatDate';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ChartBox,\n  StyledTitle,\n  StyledSpan,\n  LineBox,\n  LineList,\n  LineItem,\n  StyledP,\n} from './LineChart.styled';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst options = {\n  responsive: true,\n  scales: {\n    y: {\n      display: false,\n    },\n  },\n  plugins: {\n    legend: {\n      display: false,\n    },\n    title: {\n      display: false,\n    },\n  },\n};\n\nexport const LineChart = ({ days, totalPagesInTraining }) => {\n  const { t } = useTranslation();\n  const results = useSelector(trainingSelectors.results);\n\n  const startDate = useSelector(trainingSelectors.startDate);\n\n  const labelsArr = Array.apply(null, Array(days));\n  labelsArr.forEach((_, index, array) => {\n    array[index] = format.dayLikeChartLabel(\n      new Date(startDate + index * 24 * 60 * 60 * 1000)\n    );\n  });\n\n  const averageNumberOfPagesPerDay = days > 0 ? totalPagesInTraining / days : 0;\n  const planArr = Array.apply(null, Array(days));\n\n  planArr.forEach((_, index, array) => {\n    array[index] = Math.round(\n      averageNumberOfPagesPerDay + averageNumberOfPagesPerDay * index\n    );\n  });\n\n  const resultsByDay = results?.reduce((obj, result) => {\n    const day = format.dayLikeChartLabel(result.date);\n    return { ...obj, [day]: obj[day] ? obj[day] + result.pages : result.pages };\n  }, {});\n\n  const factArr = labelsArr.reduce((acc, data, index, arr) => {\n    const resultDates = Object.keys(resultsByDay);\n    const lastDate = resultDates[resultDates.length - 1];\n    const indexLastDate = arr.indexOf(lastDate);\n    if (index === 0) {\n      return [resultsByDay[data] ? resultsByDay[data] : 0];\n    }\n    if (index > indexLastDate) {\n      return [...acc];\n    }\n\n    return [\n      ...acc,\n      resultsByDay[data]\n        ? resultsByDay[data] + acc[acc.length - 1]\n        : acc[acc.length - 1],\n    ];\n  }, []);\n\n  const lab = labelsArr.length > 0 ? [...labelsArr] : ['', '', '', ''];\n  const plan = planArr.length > 0 ? [...planArr] : [5];\n  const fact = factArr.length > 0 ? [...factArr] : [4];\n\n  const labels = [...lab];\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: 'Plan',\n        data: [...plan],\n        lineTension: 0.3,\n        borderColor: '#091e3f',\n        pointBackgroundColor: '#091e3f',\n        pointHoverRadius: 10,\n        pointRadius: 8,\n        PointHitRadius: 10,\n      },\n      {\n        label: 'Fact',\n        data: [...fact],\n        lineTension: 0.3,\n        borderColor: '#ff6b08',\n        pointBackgroundColor: '#ff6b08',\n        pointHoverRadius: 10,\n        pointRadius: 8,\n        PointHitRadius: 10,\n      },\n    ],\n  };\n\n  return (\n    <ChartBox>\n      <StyledTitle>\n        {t('number_of_pages_a_day')}\n\n        <StyledSpan>{Math.round(averageNumberOfPagesPerDay)}</StyledSpan>\n      </StyledTitle>\n      <LineBox>\n        <LineList>\n          <LineItem>{t('line_chart_plan')}</LineItem>\n          <LineItem accent>{t('line_chart_fact')}</LineItem>\n        </LineList>\n      </LineBox>\n      <Line options={options} data={data} />\n      <StyledP>{t('line_chart_time')}</StyledP>\n    </ChartBox>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport { convertMs } from 'helpers/convertMs';\nimport { useLogOutRedirect } from 'hooks/useLogOutRedirect';\n\nimport { userSelectors, userThunk } from 'redux/auth';\nimport { trainingSelectors, trainingThunk } from 'redux/training';\nimport { selectedDatesSelectors } from 'redux/selectedDates';\nimport { selectedDatesActions } from 'redux/selectedDates';\n\nimport { TrainingDataSelection } from 'components/TrainingDataSelection/TrainingDataSelection';\nimport { MyGoal } from 'components/MyGoal/MyGoal';\nimport { BookTableMobile } from 'components/BookTableMobile/BookTableMobile';\nimport { Timer } from 'components/Timer/Timer';\nimport { LibBookTable } from 'components/LibBookTable/LibBookTable';\nimport { ReadingInformation } from 'components/ReadingInformation/ReadingInformation';\nimport { Button } from 'components/StyledButton/StyledButton ';\nimport { MobileLinkToSecondPage } from 'components/MobileLinkToSecondPage/MobileLinkToSecondPage';\nimport { StyledContainer } from 'components/StyledContainer/StyledContainer.styled';\nimport { TrainingContainer } from 'components/TrainingContainer/TrainingContainer';\nimport { CenterFlexBox } from 'components/CenterFlexBox/CenterFlexBox';\nimport { SiteBar } from 'components/SiteBar/SiteBar';\nimport { FinishModal } from 'components/FinishModal/FinishModal';\nimport { LineChart } from 'components/LineChart/LineChart';\n\nconst Training = () => {\n  useLogOutRedirect();\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const isMobileDevice = useMediaQuery({ query: '(max-width: 767px)' });\n  const isDesktop = useMediaQuery({ query: '(min-width: 1280px)' });\n\n  const isTrainingStarted = useSelector(userSelectors.isTrainingStarted);\n\n  const selectedBooks = useSelector(selectedDatesSelectors.booksList);\n  const selectedEndDate = useSelector(selectedDatesSelectors.endDate);\n  const selectedStartDate = useSelector(selectedDatesSelectors.startDate);\n  const { days: prevPeriod } = convertMs(selectedEndDate - selectedStartDate);\n  const period = selectedEndDate === '' ? 0 : prevPeriod;\n  const myGoalParams = [\n    { param: 'books', text: t('amountOfBooks'), amount: selectedBooks.length },\n    { param: 'days', text: t('amountOfDays'), amount: period },\n  ];\n\n  const books = useSelector(trainingSelectors.booksList);\n\n  const finishDate = useSelector(trainingSelectors.finishDate);\n  const startDate = useSelector(trainingSelectors.startDate);\n  const id = useSelector(trainingSelectors.id);\n\n  const isTrainingCompleted = useSelector(trainingSelectors.completed);\n\n  const completenessReason = useSelector(trainingSelectors.completenessReason);\n\n  //загалом сторінок в тренуванні\n  const totalPagesInTraining = books.reduce(\n    (previousValue, book) => previousValue + book.pages,\n    0\n  );\n\n  const deltaTime = finishDate ? finishDate - startDate : 0;\n  const { days } = convertMs(deltaTime);\n  const booksLeft = books?.filter(book => book.status !== 'haveRead')?.length;\n  const myGoalParamsTrainingStarted = [\n    { param: 'books', text: t('amountOfBooks'), amount: books?.length },\n    { param: 'days', text: t('amountOfDays'), amount: days },\n    { param: 'booksLeft', text: t('booksLeft'), amount: booksLeft },\n  ];\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  // const [isModalOpen, setIsModalOpen] = useState(true);\n\n  useEffect(() => {\n    if (isTrainingStarted) {\n      dispatch(trainingThunk.getTrainingThank());\n    }\n  }, [dispatch, isTrainingStarted]);\n\n  useEffect(() => {\n    if (isTrainingCompleted) {\n      setIsModalOpen(true);\n    }\n  }, [isTrainingCompleted]);\n\n  const isExistNoSaveTrainingDate =\n    !isTrainingStarted && selectedBooks?.length > 0 && selectedEndDate !== '';\n\n  const onStartTrainingClick = () => {\n    dispatch(userThunk.changeTrainingStatusThunk(true));\n    dispatch(\n      trainingThunk.addTrainingThank({\n        startDate: selectedStartDate,\n        finishDate: selectedEndDate,\n        books: selectedBooks,\n      })\n    );\n    dispatch(selectedDatesActions.resetSelectedDates());\n  };\n\n  const onFinishModalBtnClick = () => {\n    setIsModalOpen(false);\n    dispatch(trainingThunk.deleteTrainingThank(id));\n    dispatch(userThunk.changeTrainingStatusThunk(false));\n  };\n\n  const exception = !isDesktop && isTrainingStarted;\n\n  return (\n    <>\n      <StyledContainer>\n        <CenterFlexBox>\n          {isMobileDevice ? (\n            <>\n              {isTrainingStarted ? (\n                <>\n                  <BookTableMobile books={books} startedTraining />\n                  <LineChart\n                    days={days}\n                    totalPagesInTraining={totalPagesInTraining}\n                  />\n                </>\n              ) : (\n                <>\n                  <MobileLinkToSecondPage to=\"/mobileTrainingBookTable \" />\n                  <TrainingDataSelection />\n                </>\n              )}\n            </>\n          ) : (\n            <TrainingContainer\n              trainingStarted={isTrainingStarted ? true : false}\n            >\n              <CenterFlexBox>\n                {isTrainingStarted ? (\n                  <>\n                    <Timer endDate={finishDate} />\n                    {exception && (\n                      <MyGoal\n                        trainingStarted\n                        statistic={myGoalParamsTrainingStarted}\n                      />\n                    )}\n                  </>\n                ) : (\n                  <TrainingDataSelection />\n                )}\n\n                <>\n                  <LibBookTable\n                    data={isTrainingStarted ? books : selectedBooks}\n                    startedTraining={isTrainingStarted ? true : false}\n                    training={isTrainingStarted ? false : true}\n                  />\n                  {!isTrainingStarted && (\n                    <Button\n                      onClick={onStartTrainingClick}\n                      textContent={t('startTraining')}\n                      active\n                      size={200}\n                      disabled={!isExistNoSaveTrainingDate}\n                      type=\"button\"\n                    />\n                  )}\n                  <LineChart\n                    days={days}\n                    totalPagesInTraining={totalPagesInTraining}\n                  />\n                  {isTrainingStarted && !isDesktop && <ReadingInformation />}\n                </>\n              </CenterFlexBox>\n              <SiteBar>\n                {!exception && (\n                  <MyGoal\n                    trainingStarted={isTrainingStarted ? true : false}\n                    statistic={\n                      isTrainingStarted\n                        ? myGoalParamsTrainingStarted\n                        : myGoalParams\n                    }\n                  />\n                )}\n                {isTrainingStarted && isDesktop && <ReadingInformation />}\n              </SiteBar>\n            </TrainingContainer>\n          )}\n        </CenterFlexBox>\n      </StyledContainer>\n\n      <FinishModal\n        completenessReason={completenessReason}\n        isModalOpen={isModalOpen}\n        onFinishModalBtnClick={onFinishModalBtnClick}\n      />\n    </>\n  );\n};\n\nexport default Training;\n\n// ['noUnreadBooks', 'hasDeadlinePassed', ''];\n"],"names":["CenterFlexBox","styled","p","theme","media","tablet","space","desktop","StyledLink","Link","colors","accentColor","MobileLinkToSecondPage","to","convertMs","ms","minute","second","hour","day","days","Math","floor","hours","minutes","seconds","booksList","state","training","books","startDate","finishDate","results","completed","id","_id","completenessReason","StyledTitle","fontWeights","bold","fontSizes","m","lineHeights","secondBody","white","backgroundTitle","TrainingTitle","text","StyledForm","Form","deepBlue","Wrapper","initialValues","book","validationSchema","Yup","required","SelectBooks","t","useTranslation","dispatch","useDispatch","useSelector","booksSelectors","filter","status","defaultValue","onSubmit","val","resetForm","newBook","find","selectedDatesActions","name","as","value","hidden","disabled","map","title","size","textContent","type","TrainingWrapper","normal","StyledControlsWrapper","backgroundBody","iconColor","TrainingDataSelection","start","selectedDates","end","endDate","useState","setStartDate","setEndDate","useEffect","data","valueOf","showIcon","selected","onChange","date","closeOnScroll","dateFormat","selectsStart","minDate","Date","now","showDisabledMonthNavigation","placeholderText","selectsEnd","MyGoalMainBox","StatsBox","isTrainingStarted","MyGoalStatsList","MyGoalStatsListItem","MyGoalStatsDigitBox","backgroundStatistic","xxl","param","statisticColor","xl","MyGoalStatsText","xs","s","notActiveText","ss","MyGoal","trainingStarted","statistic","amount","StyledTimerWrapper","TimerTitle","StyledContainer","StyledItem","StyledValue","StyledSeparator","StyledSpan","TimerItem","selectedDate","timerTitle","time","setTime","intervalId","useRef","timeLeft","current","clearInterval","setInterval","TimerWrapper","Timer","currentYear","getFullYear","endYear","today","parse","readingResultSchema","shape","dateInput","max","pageInput","integer","min","StyledDateView","DateView","StyledField","styleForPageInput","width","backgroundColor","border","outline","StyledInputsWrapper","StyledLabel","SendResultsForm","onAddResultClick","autoComplete","htmlFor","form","field","setFieldValue","maxDate","style","center","active","height","StyledCell","pale","StatisticsRow","row","pages","format","dayLikeChartLabel","StatisticsList","visibleRows","reverse","slice","ReadingInformation","trainingSelectors","trainingThunk","TrainingContainer","SiteBar","ThumbUpIcon","FaRegThumbsUp","StyledModalContentWrapper","ModalText","FinishModal","isModalOpen","onFinishModalBtnClick","Modal","onClick","ChartBox","LineBox","LineList","LineItem","accent","StyledP","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","options","responsive","scales","y","display","plugins","legend","LineChart","totalPagesInTraining","labelsArr","Array","apply","forEach","_","index","array","averageNumberOfPagesPerDay","planArr","round","resultsByDay","reduce","obj","result","factArr","acc","arr","resultDates","Object","keys","lastDate","length","indexLastDate","indexOf","lab","plan","fact","labels","datasets","label","lineTension","borderColor","pointBackgroundColor","pointHoverRadius","pointRadius","PointHitRadius","useLogOutRedirect","isMobileDevice","useMediaQuery","query","isDesktop","userSelectors","selectedBooks","selectedDatesSelectors","selectedEndDate","selectedStartDate","prevPeriod","period","myGoalParams","isTrainingCompleted","previousValue","booksLeft","myGoalParamsTrainingStarted","setIsModalOpen","isExistNoSaveTrainingDate","exception","BookTableMobile","startedTraining","LibBookTable","userThunk"],"sourceRoot":""}