{"version":3,"file":"static/js/492.cc6d85b8.chunk.js","mappings":"gNAGMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uZAWA,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,WAAnB,IASJ,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IACG,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,UAAUC,CAAtB,IACC,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,YAAYC,MAAxB,IACP,SAAAR,GAAC,OAAIA,EAAEC,MAAMC,OAAOO,KAAnB,IAIDC,EAAmB,SAAC,GAAY,IAAVC,EAAS,EAATA,GACjC,OACE,SAACd,EAAD,CAAYc,GAAIA,EAAhB,UACE,iCAGL,C,+ICJD,UAnB6B,YAC3BC,EAAAA,EAAAA,KACA,IAAMC,GAAgBC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IAC5BC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,EAAAA,IACpBC,GAAoBJ,EAAAA,EAAAA,IAAYK,EAAAA,GAAAA,IAChCC,GAAiBC,EAAAA,EAAAA,eAAc,CAAEC,MAAO,uBAC9C,OACE,SAAC,IAAD,WACE,UAAC,IAAD,CAAeC,MAAO,CAAEC,cAAe,SAAvC,WACE,SAAC,IAAD,CAAcC,KAAMP,EAAoBF,EAAQH,IAC/CO,IACC,+BACE,SAAC,IAAD,CAAkBT,GAAG,oBAMhC,C,+QC/BM,IAAMe,EAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASZ,KAAnB,EACjBa,EAAY,SAAAF,GAAK,OAAIA,EAAMC,SAASC,SAAnB,EACjBC,EAAa,SAAAH,GAAK,OAAIA,EAAMC,SAASE,UAAnB,EAClBC,EAAU,SAAAJ,GAAK,OAAIA,EAAMC,SAASG,OAAnB,EACfC,EAAY,SAAAL,GAAK,OAAIA,EAAMC,SAASI,SAAnB,EACjBC,EAAK,SAAAN,GAAK,OAAIA,EAAMC,SAASM,GAAnB,EACVC,EAAqB,SAAAR,GAAK,OAAIA,EAAMC,SAASO,kBAAnB,E","sources":["components/MobileLinkToForm/MobileLinkToForm.js","pages/MobileTrainBookTable .js","redux/training/trainingSelectors.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  position: fixed;\n  z-index: 99;\n  top: 85%;\n  left: 50vw;\n\n  transform: translate(-50%, 0);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  background: ${p => p.theme.colors.accentColor};\n  border: none;\n  width: 52px;\n  height: 52px;\n\n  border-radius: 50%;\n  line-height: 0;\n\n  span {\n    width: ${p => p.theme.space[4]}px;\n    font-size: ${p => p.theme.fontSizes.l};\n    font-weight: ${p => p.theme.fontWeights.normal};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n\nexport const MobileLinkToForm = ({ to }) => {\n  return (\n    <StyledLink to={to}>\n      <span>+</span>\n    </StyledLink>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\n\nimport { useLogOutRedirect } from 'hooks/useLogOutRedirect';\nimport { selectedDatesSelectors } from 'redux/selectedDates';\nimport { trainingSelectors } from 'redux/training';\nimport { userSelectors } from 'redux/auth';\n\nimport { LibBookTable } from 'components/LibBookTable/LibBookTable';\nimport { MobileLinkToForm } from 'components/MobileLinkToForm/MobileLinkToForm';\nimport { StyledContainer } from 'components/StyledContainer/StyledContainer.styled';\nimport { CenterFlexBox } from 'components/CenterFlexBox/CenterFlexBox';\n\nconst MobileTrainBookTable = () => {\n  useLogOutRedirect();\n  const selectedBooks = useSelector(selectedDatesSelectors.booksList);\n  const books = useSelector(trainingSelectors.booksList);\n  const isTrainingStarted = useSelector(userSelectors.isTrainingStarted);\n  const isMobileDevice = useMediaQuery({ query: '(max-width: 767px)' });\n  return (\n    <StyledContainer>\n      <CenterFlexBox style={{ paddingBottom: '100px' }}>\n        <LibBookTable data={isTrainingStarted ? books : selectedBooks} />\n        {isMobileDevice && (\n          <>\n            <MobileLinkToForm to=\"/training\" />\n          </>\n        )}\n      </CenterFlexBox>\n    </StyledContainer>\n  );\n};\nexport default MobileTrainBookTable;\n","export const booksList = state => state.training.books;\nexport const startDate = state => state.training.startDate;\nexport const finishDate = state => state.training.finishDate;\nexport const results = state => state.training.results;\nexport const completed = state => state.training.completed;\nexport const id = state => state.training._id;\nexport const completenessReason = state => state.training.completenessReason;\n"],"names":["StyledLink","styled","Link","p","theme","colors","accentColor","space","fontSizes","l","fontWeights","normal","white","MobileLinkToForm","to","useLogOutRedirect","selectedBooks","useSelector","selectedDatesSelectors","books","trainingSelectors","isTrainingStarted","userSelectors","isMobileDevice","useMediaQuery","query","style","paddingBottom","data","booksList","state","training","startDate","finishDate","results","completed","id","_id","completenessReason"],"sourceRoot":""}