{"version":3,"file":"static/js/108.4a7eae8c.chunk.js","mappings":"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","sources":["components/CenterFlexBox/CenterFlexBox.js","components/MobileLinkToSecondPage/MobileLinkToSecondPage.js","redux/training/trainingSelectors.js","helpers/convertMs.js","components/TrainingTitle/TrainingTitle.js","components/SelectBooks/SelectBooks.styled.js","components/SelectBooks/SelectBooks.js","components/TrainingDataSelection/TrainingDataSelection.style.js","components/TrainingDataSelection/TrainingDataSelection.js","components/MyGoal/MyGoal.styled.js","components/MyGoal/MyGoal.js","components/TimerItem/TimerItem.styled.js","components/TimerItem/TimerItem.js","components/Timer/Timer.styled.js","components/Timer/Timer.js","components/TrainingContainer/TrainingContainer.js","pages/Training.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CenterFlexBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  /* justify-content: center; */\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaArrowLeft } from 'react-icons/fa';\n\nconst StyledLink = styled(Link)`\n  color: ${p => p.theme.colors.accentColor};\n  display: block;\n  margin-top: 40px;\n  align-self: start;\n  margin-left: 16px;\n`;\n\nexport const MobileLinkToSecondPage = ({ to }) => {\n  return (\n    <StyledLink to={to}>\n      <FaArrowLeft />\n    </StyledLink>\n  );\n};\n","export const booksList = state => state.training.books;\nexport const startDate = state => state.training.startDate;\nexport const finishDate = state => state.training.finishDate;\n","export function convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  //  Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n","import styled from 'styled-components';\n\nconst StyledTitle = styled.h2`\n  width: 100%;\n  height: 60px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: ${p => p.theme.lineHeights.secondBody};\n\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.backgroundTitle};\n  box-shadow: 0px 2px 3px rgba(9, 30, 63, 0.1);\n\n  @media ${p => p.theme.media.desktop} {\n    /* width: 288px !important; */\n  }\n`;\nexport const TrainingTitle = ({ text }) => {\n  return <StyledTitle>{text}</StyledTitle>;\n};\n","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n\n  @media ${p => p.theme.media.tablet} {\n    flex-direction: row;\n    align-items: flex-start;\n    justify-content: space-between;\n  }\n\n  select {\n    display: block;\n    width: 100%;\n    height: 40px;\n    padding: 2px 32px 2px 12px;\n    background-color: ${p => p.theme.colors.white};\n    outline: none;\n    border: none;\n    color: ${p => p.theme.colors.deepBlue};\n\n    @media ${p => p.theme.media.tablet} {\n      width: 483px;\n    }\n    @media ${p => p.theme.media.desktop} {\n      width: 715px;\n    }\n  }\n`;\nexport const Wrapper = styled.div`\n  width: 100%;\n\n  @media ${p => p.theme.media.tablet} {\n    width: 483px;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    width: 715px;\n  }\n`;\n","import { useTranslation } from 'react-i18next';\nimport { selectedDatesActions } from 'redux/selectedDates';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { booksSelectors } from 'redux/books';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Button } from 'components/StyledButton/StyledButton ';\nimport { ErrorContainer } from 'components/ErrorContainer/ErrorContainer.styled';\n\nimport { StyledForm, Wrapper } from './SelectBooks.styled';\n\nconst initialValues = {\n  book: '',\n};\nconst validationSchema = Yup.object({\n  book: Yup.string().required('Please select a book'),\n});\n\nexport const SelectBooks = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const booksList = useSelector(booksSelectors.getBooks);\n  // const selectedBooks = useSelector(state => state.selectedDates.list);\n  const books = booksList.filter(book => book.status === 'toRead');\n\n  const defaultValue = t('chooseBooks');\n\n  const onSubmit = (val, { resetForm }) => {\n    // const isBookAlreadySelected = selectedBooks.some(({ _id }) => _id === book);\n    // if (isBookAlreadySelected) {\n    //   throw Error('This book already selected');\n    // }\n    const newBook = books.find(book => book._id === val.book);\n\n    resetForm();\n    dispatch(selectedDatesActions.addBook(newBook));\n  };\n\n  return (\n    <Formik\n      onSubmit={onSubmit}\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n    >\n      <StyledForm>\n        <Wrapper>\n          <Field name=\"book\" as=\"select\">\n            <option value=\"\" hidden disabled>\n              {defaultValue}\n            </option>\n            {books.map(book => (\n              <option value={book._id} key={book._id}>\n                {book.title}\n              </option>\n            ))}\n          </Field>\n          <ErrorContainer>\n            {/* {isBookAlreadySelected && <p>This book already selected</p>} */}\n            <ErrorMessage name=\"book\" />\n          </ErrorContainer>\n        </Wrapper>\n\n        <Button size={170} textContent={t('btnAdd')} type=\"submit\" />\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TrainingWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: 14px;\n  line-height: 1.21;\n  gap: 20px;\n  padding: ${p => p.theme.space[5]}px;\n\n  @media ${p => p.theme.media.tablet} {\n    gap: 24px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    width: 928px;\n    gap: 32px;\n    padding: 0;\n  }\n`;\n\nexport const StyledControlsWrapper = styled.div`\n  input {\n    display: block;\n    width: 100%;\n    height: 40px;\n    padding: 2px 31px 2px 40px !important;\n    background-color: ${p => p.theme.colors.backgroundBody};\n    border: 1px solid #a6abb9;\n    margin-bottom: 20px;\n    @media screen and (min-width: 768px) {\n      width: 250px;\n      margin: 0;\n    }\n  }\n  div {\n    z-index: 10;\n  }\n  svg {\n    z-index: 5;\n    padding: 0 !important;\n    position: absolute;\n    top: 12px;\n    left: 12px;\n    width: 17px;\n    height: 17px;\n    fill: ${p => p.theme.colors.iconColor};\n  }\n\n  @media ${p => p.theme.media.tablet} {\n    display: flex;\n    gap: 40px;\n    align-self: flex-start;\n  }\n  @media ${p => p.theme.media.desktop} {\n    align-self: center;\n    gap: 40px;\n  }\n`;\n\nexport const TrainingContainer = styled.div`\n  min-width: 320px;\n  margin-left: auto;\n  margin-right: auto;\n  /* padding: 32px 20px; */\n  background-color: #f6f7fb;\n  @media screen and (min-width: 768px) {\n    min-width: 768px;\n    padding: 40px 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n`;\n\nexport const TrainingMaine = styled.div`\n  @media screen and (min-width: 1280px) {\n    width: 928px;\n  }\n`;\n\nexport const TrainingSidebar = styled.div`\n  @media screen and (min-width: 1280px) {\n    width: 288px;\n  }\n`;\n","import DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport { selectedDatesActions } from 'redux/selectedDates';\n\nimport { TrainingTitle } from 'components/TrainingTitle/TrainingTitle';\nimport { SelectBooks } from 'components/SelectBooks/SelectBooks';\nimport {\n  StyledControlsWrapper,\n  TrainingWrapper,\n} from './TrainingDataSelection.style';\n\nexport const TrainingDataSelection = () => {\n  const { t } = useTranslation();\n  const start = useSelector(state => state.selectedDates.startDate);\n  const end = useSelector(state => state.selectedDates.endDate);\n  const [startDate, setStartDate] = useState(start);\n  const [endDate, setEndDate] = useState(end);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const data = startDate.valueOf();\n\n    dispatch(selectedDatesActions.startDate(data));\n  }, [dispatch, startDate]);\n\n  useEffect(() => {\n    const data = endDate.valueOf();\n\n    dispatch(selectedDatesActions.endDate(data));\n  }, [dispatch, endDate]);\n\n  return (\n    <>\n      <TrainingWrapper>\n        <TrainingTitle text={t('myTraining')} />\n        <StyledControlsWrapper>\n          <DatePicker\n            showIcon\n            selected={start}\n            onChange={date => setStartDate(date)}\n            closeOnScroll={true}\n            // showTimeSelect\n            dateFormat=\"MMMM d, yyyy h:mm aa\"\n            selectsStart\n            minDate={Date.now()}\n            showDisabledMonthNavigation\n            placeholderText={t('start')}\n          />\n\n          <DatePicker\n            showIcon\n            selected={end}\n            onChange={date => setEndDate(date)}\n            closeOnScroll={true}\n            // showTimeSelect\n            dateFormat=\"MMMM d, yyyy h:mm aa\"\n            selectsEnd\n            minDate={startDate}\n            showDisabledMonthNavigation\n            placeholderText={t('finish')}\n          />\n        </StyledControlsWrapper>\n        <SelectBooks />\n      </TrainingWrapper>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MyGoalMainBox = styled.div`\n  width: 100%;\n  background-color: white;\n  box-shadow: 0px 2px 3px rgba(9, 30, 63, 0.1);\n\n  @media ${p => p.theme.media.tablet} {\n    padding-left: ${p => p.theme.space[5]}px;\n    padding-right: ${p => p.theme.space[5]}px;\n\n    height: 105px;\n    display: flex;\n    /* align-items: center; */\n    align-items: baseline;\n\n    h2 {\n      width: 275px;\n    }\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    padding-left: 0;\n    padding-right: 0;\n    width: 288px;\n    height: 304px;\n    display: block;\n    h2 {\n      width: 288px;\n    }\n  }\n`;\n\nexport const StatsBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 236px;\n  background-color: white;\n  box-shadow: 0px 2px 3px rgba(9, 30, 63, 0.1);\n\n  @media ${p => p.theme.media.tablet} {\n    height: 105px;\n    box-shadow: none;\n    margin-left: auto;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    height: 244px;\n  }\n`;\n\nexport const MyGoalStatsList = styled.ul`\n  display: flex;\n  justify-content: center;\n\n  width: 100%;\n  gap: 20px;\n  padding: ${p => p.theme.space[5]}px;\n\n  @media ${p => p.theme.media.tablet} {\n    align-items: baseline;\n    gap: ${p => (p.isTrainingStarted ? 12 : 40)}px;\n    padding: 0;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    gap: 20px;\n    margin: 0;\n  }\n`;\n\nexport const MyGoalStatsListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media ${p => p.theme.media.tablet} {\n    height: 60px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    height: 148px;\n    width: ${p => p.isTrainingStarted && 70}px;\n  }\n`;\n\nexport const MyGoalStatsDigitBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: ${p => (p.isTrainingStarted ? 66 : 100)}px;\n  height: ${p => (p.isTrainingStarted ? 66 : 100)}px;\n  background: ${p => p.theme.colors.backgroundStatistic};\n  box-shadow: 4px 4px 8px rgba(36, 42, 55, 0.15);\n\n  font-family: Open Sans;\n  font-weight: 700;\n  font-size: ${p => p.theme.fontSizes.xxl};\n  line-height: 1.18;\n  text-align: center;\n  color: ${p => {\n    // console.log(p.booksLeft);\n    return p.param === 'booksLeft'\n      ? `${p.theme.colors.accentColor}`\n      : `${p.theme.colors.statisticColor}`;\n  }};\n\n  @media ${p => p.theme.media.tablet} {\n    font-size: ${p => p.theme.fontSizes.xl};\n    width: 100px;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    width: ${p => (p.isTrainingStarted ? 66 : 100)}px;\n    height: ${p => (p.isTrainingStarted ? 66 : 100)}px;\n  }\n`;\n\nexport const MyGoalStatsText = styled.span`\n  width: 100%;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p =>\n    p.isTrainingStarted ? `${p.theme.fontSizes.xs}` : `${p.theme.fontSizes.s}`};\n  line-height: ${p => p.theme.lineHeights.secondBody};\n  text-align: center;\n  color: ${p => p.theme.colors.notActiveText};\n\n  display: flex;\n  justify-content: center;\n  margin-top: 14px;\n\n  @media ${p => p.theme.media.tablet} {\n    max-width: 100px;\n    font-size: ${p => p.theme.fontSizes.ss};\n    margin-top: 0;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    font-size: ${p =>\n      p.isTrainingStarted\n        ? `${p.theme.fontSizes.xs}`\n        : `${p.theme.fontSizes.s}`};\n    margin-top: 14px;\n  }\n`;\n","import { useTranslation } from 'react-i18next';\n\nimport { TrainingTitle } from 'components/TrainingTitle/TrainingTitle';\nimport {\n  MyGoalMainBox,\n  StatsBox,\n  MyGoalStatsList,\n  MyGoalStatsListItem,\n  MyGoalStatsDigitBox,\n  MyGoalStatsText,\n} from './MyGoal.styled';\n\nexport const MyGoal = ({ trainingStarted, statistic }) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <MyGoalMainBox>\n        <TrainingTitle text={t('myGoals')} />\n\n        <StatsBox>\n          <MyGoalStatsList isTrainingStarted={trainingStarted}>\n            {statistic.map(({ param, text, amount }) => (\n              <MyGoalStatsListItem\n                key={param}\n                isTrainingStarted={trainingStarted}\n              >\n                <MyGoalStatsDigitBox\n                  param={param}\n                  isTrainingStarted={trainingStarted}\n                >\n                  {amount}\n                </MyGoalStatsDigitBox>\n                <MyGoalStatsText isTrainingStarted={trainingStarted}>\n                  {text}\n                </MyGoalStatsText>\n              </MyGoalStatsListItem>\n            ))}\n          </MyGoalStatsList>\n        </StatsBox>\n      </MyGoalMainBox>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledTimerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  @media ${p => p.theme.media.tablet} {\n    width: 290px;\n  }\n`;\n\nexport const TimerTitle = styled.div`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.21;\n  color: #898f9f;\n  margin-bottom: 8px;\n`;\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  align-items: start;\n  justify-content: center;\n  width: 100%;\n  height: 60px;\n\n  background: #ffffff;\n  box-shadow: 4px 4px 8px rgba(36, 42, 55, 0.15);\n  padding-bottom: 8px;\n`;\nexport const StyledItem = styled.p`\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  text-align: center;\n  width: 43px;\n\n  :not(:last-child) {\n    margin-right: 8px;\n  }\n`;\n\nexport const StyledValue = styled.span`\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 25px;\n  line-height: 1.52;\n\n  color: #091e3f;\n`;\nexport const StyledSeparator = styled.span`\n  font-weight: 700;\n  font-size: 25px;\n  line-height: 1.52;\n  margin-right: 8px;\n`;\n\nexport const StyledSpan = styled.span`\n  font-weight: 500;\n  font-size: 10px;\n  line-height: 12px;\n  text-align: center;\n\n  color: #898f9f;\n`;\n","import { useTranslation } from 'react-i18next';\n\nimport {\n  StyledContainer,\n  StyledItem,\n  StyledValue,\n  StyledTimerWrapper,\n  TimerTitle,\n  StyledSpan,\n  StyledSeparator,\n} from './TimerItem.styled.js';\nimport { useState, useEffect, useRef } from 'react';\nimport { convertMs } from 'helpers/convertMs.js';\n\nexport const TimerItem = ({ selectedDate, timerTitle }) => {\n  const [time, setTime] = useState(() => Date.now());\n  const { t } = useTranslation();\n  const intervalId = useRef(null);\n  const deltaTime = selectedDate - time;\n  const timeLeft = convertMs(deltaTime);\n\n  useEffect(() => {\n    if (intervalId.current === null) {\n      intervalId.current = setInterval(() => {\n        setTime(Date.now());\n      }, 1000);\n      return;\n    }\n    return clearInterval(intervalId);\n  }, []);\n\n  return (\n    <StyledTimerWrapper>\n      <TimerTitle>{timerTitle} </TimerTitle>\n      <StyledContainer>\n        <StyledItem>\n          <StyledValue>{timeLeft.days}</StyledValue>\n          <StyledSpan>{t('days')}</StyledSpan>\n        </StyledItem>\n\n        <StyledSeparator>:</StyledSeparator>\n\n        <StyledItem>\n          <StyledValue>{timeLeft.hours}</StyledValue>\n          <StyledSpan>{t('hrs')}</StyledSpan>\n        </StyledItem>\n\n        <StyledSeparator>:</StyledSeparator>\n\n        <StyledItem>\n          <StyledValue>{timeLeft.minutes}</StyledValue>\n          <StyledSpan>{t('mins')}</StyledSpan>\n        </StyledItem>\n        <StyledSeparator>:</StyledSeparator>\n\n        <StyledItem>\n          <StyledValue>{timeLeft.seconds}</StyledValue>\n          <StyledSpan>{t('secs')}</StyledSpan>\n        </StyledItem>\n      </StyledContainer>\n    </StyledTimerWrapper>\n  );\n};\n","import styled from 'styled-components';\nexport const TimerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  width: 100%;\n  @media ${p => p.theme.media.tablet} {\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 32px;\n    width: auto;\n  }\n  @media ${p => p.theme.media.desktop} {\n    gap: 74px;\n    align-items: start;\n  }\n`;\n","import { useTranslation } from 'react-i18next';\n\nimport { TimerItem } from 'components/TimerItem/TimerItem';\n\nimport { TimerWrapper } from './Timer.styled';\n\nexport const Timer = ({ endDate }) => {\n  const { t } = useTranslation();\n  const today = new Date();\n  const currentYear = today.getFullYear();\n\n  const endYear = new Date(`${currentYear}`, 12, 0);\n\n  return (\n    <TimerWrapper>\n      <TimerItem selectedDate={endYear} timerTitle={t('yearsCountdown')} />\n      <TimerItem selectedDate={endDate} timerTitle={t('goalsCountdown')} />\n    </TimerWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TrainingContainer = styled.div`\n  display: flex;\n  flex-direction: ${p => (p.trainingStarted ? 'column' : 'column-reverse')};\n  gap: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  @media ${p => p.theme.media.tablet} {\n    width: 100%;\n    padding-top: 40px;\n    padding-bottom: 40px;\n  }\n  @media ${p => p.theme.media.desktop} {\n    flex-direction: row;\n    justify-content: space-between;\n    // padding: ${p => p.theme.space[5]}px;\n  }\n`;\n\n//  <StyledContainer>\n//       <WrapperBody>\n//         {isMobileDevice ? (\n//           <CenterFlexBox>\n//             {isTrainingStarted ? (\n//               <></>\n//             ) : (\n//               <>\n//                 <MobileLinkToSecondPage to=\"/mobileTraingBookTable \" />\n//                 <TrainingDataSelection />\n//               </>\n//             )}\n//           </CenterFlexBox>\n//         ) : (\n//           <CenterFlexBox>\n//             {isTrainingStarted ? (\n//               <TrainingContainer trainingStarted>\n//                 <Timer endDate={endDate} />\n//                 <MyGoal\n//                   trainingStarted\n//                   statistic={myGoalParamsTrainingStarted}\n//                 />\n//               </TrainingContainer>\n//             ) : (\n//               <TrainingContainer>\n//                 <TrainingDataSelection />\n//                 <MyGoal statistic={myGoalParams} />\n//               </TrainingContainer>\n//             )}\n\n//             <LibBookTable data={books} training />\n//             {!isTrainingStarted && (\n//               <Button\n//                 onClick={onStartTrainingClick}\n//                 textContent={t('startTraining')}\n//                 active\n//                 size={200}\n//                 disabled={!isExistTrainingDate}\n//                 type=\"button\"\n//               />\n//             )}\n//           </CenterFlexBox>\n//         )}\n//       </WrapperBody>\n//     </StyledContainer>\n//   );\n// };\n","import { useMediaQuery } from 'react-responsive';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport { useLogOutRedirect } from 'hooks/useLogOutRedirect';\nimport { userSelectors, userThunk } from 'redux/auth';\nimport { selectedDatesSelectors } from 'redux/selectedDates';\nimport { trainingSelectors } from 'redux/training';\nimport { trainingThunk } from 'redux/training';\nimport { convertMs } from 'helpers/convertMs';\n\nimport { TrainingDataSelection } from 'components/TrainingDataSelection/TrainingDataSelection';\nimport { MyGoal } from 'components/MyGoal/MyGoal';\nimport { BookTableMobile } from 'components/BookTableMobile/BookTableMobile';\nimport { Timer } from 'components/Timer/Timer';\nimport { LibBookTable } from 'components/LibBookTable/LibBookTable';\nimport { Button } from 'components/StyledButton/StyledButton ';\nimport { MobileLinkToSecondPage } from 'components/MobileLinkToSecondPage/MobileLinkToSecondPage';\nimport { StyledContainer } from 'components/StyledContainer/StyledContainer.styled';\nimport { TrainingContainer } from 'components/TrainingContainer/TrainingContainer';\nimport { CenterFlexBox } from 'components/CenterFlexBox/CenterFlexBox';\n\nconst Training = () => {\n  useLogOutRedirect();\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const isMobileDevice = useMediaQuery({ query: '(max-width: 767px)' });\n  const isDesktopDevice = useMediaQuery({ query: '(min-width: 1280px)' });\n\n  const selectedBooks = useSelector(selectedDatesSelectors.booksList);\n  const selectedEndDate = useSelector(selectedDatesSelectors.endDate);\n  const selectedStartDate = useSelector(selectedDatesSelectors.startDate);\n  const isTrainingStarted = useSelector(userSelectors.isTrainingStarted);\n\n  const books = useSelector(trainingSelectors.booksList);\n  const finishDate = useSelector(trainingSelectors.finishDate);\n  const startDate = useSelector(trainingSelectors.startDate);\n\n  const deltaTime = finishDate ? finishDate - startDate : 0;\n  const { days } = convertMs(deltaTime);\n\n  const isExistTrainingDate =\n    selectedBooks.length > 0 && selectedEndDate !== '' && !isTrainingStarted;\n\n  const onStartTrainingClick = () => {\n    dispatch(userThunk.changeTrainingStatusThunk(true));\n    dispatch(\n      trainingThunk.addTrainingThank({\n        startDate: selectedStartDate,\n        finishDate: selectedEndDate,\n        books: selectedBooks,\n      })\n    );\n  };\n  const myGoalParams = [\n    { param: 'books', text: t('amountOfBooks'), amount: books.length },\n    { param: 'days', text: t('amountOfDays'), amount: days },\n  ];\n  const myGoalParamsTrainingStarted = [\n    { param: 'books', text: t('amountOfBooks'), amount: books.length },\n    { param: 'days', text: t('amountOfDays'), amount: days },\n    { param: 'booksLeft', text: t('booksLeft'), amount: 5 },\n  ];\n\n  return (\n    <StyledContainer>\n      <CenterFlexBox>\n        {isTrainingStarted ? (\n          <>\n            <TrainingContainer trainingStarted>\n              <CenterFlexBox>\n                <Timer endDate={finishDate} />\n                {isDesktopDevice && (\n                  <LibBookTable data={books} startedTraining />\n                )}\n              </CenterFlexBox>\n\n              <MyGoal trainingStarted statistic={myGoalParamsTrainingStarted} />\n            </TrainingContainer>\n\n            {!isDesktopDevice && !isMobileDevice && (\n              <LibBookTable data={books} startedTraining />\n            )}\n\n            {isMobileDevice && (\n              <BookTableMobile books={books} startedTraining />\n            )}\n          </>\n        ) : (\n          <>\n            {isMobileDevice ? (\n              <>\n                <MobileLinkToSecondPage to=\"/mobileTraingBookTable \" />\n                <TrainingDataSelection />\n              </>\n            ) : (\n              <>\n                <TrainingContainer>\n                  <TrainingDataSelection />\n                  <MyGoal statistic={myGoalParams} />\n                </TrainingContainer>\n                <LibBookTable data={selectedBooks} training />\n                <Button\n                  onClick={onStartTrainingClick}\n                  textContent={t('startTraining')}\n                  active\n                  size={200}\n                  disabled={!isExistTrainingDate}\n                  type=\"button\"\n                />\n              </>\n            )}\n          </>\n        )}\n        {/* {!isMobileDevice && <LibBookTable data={books} training />} */}\n      </CenterFlexBox>\n    </StyledContainer>\n  );\n};\n\nexport default Training;\n"],"names":["CenterFlexBox","styled","StyledLink","Link","p","theme","colors","accentColor","MobileLinkToSecondPage","to","booksList","state","training","books","startDate","finishDate","convertMs","ms","minute","second","hour","day","days","Math","floor","hours","minutes","seconds","StyledTitle","fontWeights","bold","fontSizes","m","lineHeights","secondBody","white","backgroundTitle","media","desktop","TrainingTitle","text","StyledForm","Form","tablet","deepBlue","Wrapper","initialValues","book","validationSchema","Yup","required","SelectBooks","t","useTranslation","dispatch","useDispatch","useSelector","booksSelectors","filter","status","defaultValue","onSubmit","val","resetForm","newBook","find","_id","selectedDatesActions","name","as","value","hidden","disabled","map","title","size","textContent","type","TrainingWrapper","normal","space","StyledControlsWrapper","backgroundBody","iconColor","TrainingDataSelection","start","selectedDates","end","endDate","useState","setStartDate","setEndDate","useEffect","data","valueOf","showIcon","selected","onChange","date","closeOnScroll","dateFormat","selectsStart","minDate","Date","now","showDisabledMonthNavigation","placeholderText","selectsEnd","MyGoalMainBox","StatsBox","MyGoalStatsList","isTrainingStarted","MyGoalStatsListItem","MyGoalStatsDigitBox","backgroundStatistic","xxl","param","statisticColor","xl","MyGoalStatsText","xs","s","notActiveText","ss","MyGoal","trainingStarted","statistic","amount","StyledTimerWrapper","TimerTitle","StyledContainer","StyledItem","StyledValue","StyledSeparator","StyledSpan","TimerItem","selectedDate","timerTitle","time","setTime","intervalId","useRef","timeLeft","current","clearInterval","setInterval","TimerWrapper","Timer","currentYear","getFullYear","endYear","TrainingContainer","useLogOutRedirect","isMobileDevice","useMediaQuery","query","isDesktopDevice","selectedBooks","selectedDatesSelectors","selectedEndDate","selectedStartDate","userSelectors","trainingSelectors","isExistTrainingDate","length","myGoalParams","myGoalParamsTrainingStarted","LibBookTable","startedTraining","BookTableMobile","onClick","userThunk","changeTrainingStatusThunk","trainingThunk","active"],"sourceRoot":""}