{"version":3,"file":"static/js/186.efd87b2b.chunk.js","mappings":"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","sources":["components/MobileLinkToSecondPage/MobileLinkToSecondPage.js","components/WrapperBody/WrapperBody.styled.js","validSchemas/librarySchema.js","components/BookAddForm/BookAddForm.styled.js","components/BookAddForm/BookAddForm.js","pages/Library.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FaArrowLeft } from 'react-icons/fa';\n\nconst StyledLink = styled(Link)`\n  color: ${p => p.theme.colors.accentColor};\n  display: block;\n  margin-bottom: 40px;\n  align-self: start;\n  margin-left: 16px;\n`;\n\nexport const MobileLinkToSecondPage = ({ to }) => {\n  return (\n    <StyledLink to={to}>\n      <FaArrowLeft />\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\nexport const WrapperBody = styled.div`\n  background: ${p => p.theme.colors.backgroundBody};\n  padding-top: ${p => p.theme.space[6]}px;\n  padding-bottom: ${p => p.theme.space[6]}px;\n`;\n","import * as Yup from 'yup';\n\nconst currentYear = () => {\n  return Number(new Date().getFullYear());\n};\n\nexport const librarySchema = Yup.object().shape({\n  title: Yup.string()\n    .max(50, 'Book title should be less than 50')\n    .matches(/^[^\\s-]/, 'Name should not start from space or dash')\n    .required('Book title is required'),\n\n  author: Yup.string()\n    .max(50, 'Author name should be less than 50')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я]*)*$/,\n      'Author name must contain letters'\n    )\n    .required('Author is required'),\n\n  year: Yup.number()\n    .typeError('Year should be a date')\n    .integer('Must be an integer ')\n    .min(1000, 'This year cannot be')\n    .max(currentYear(), 'Must be no more than current year'),\n\n  pages: Yup.number()\n    .typeError('Pages should be a number')\n    .integer('Must be an integer ')\n    .min(1, 'Too Short!')\n    .max(9999, 'Must be no more than 4 characters')\n    .required('Pages is required'),\n});\n","import { Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledForm = styled(Form)`\n  width: 280px;\n  /* width: 100%; */\n  flex-direction: column;\n  display: flex;\n  gap: ${p => p.theme.space[4]}px;\n  align-items: center;\n  justify-content: flex-start;\n  padding-right: ${p => p.theme.space[4]}px;\n  padding-left: ${p => p.theme.space[4]}px;\n\n  @media ${p => p.theme.media.table} {\n    /* width: 704px; */\n    width: 100%;\n  }\n  @media ${p => p.theme.media.desktop} {\n    width: 100%;\n    flex-direction: row;\n    /* align-items: flex-end; */\n  }\n`;\n\nexport const WrapperGroupOfInputs = styled.div`\n  width: 280px;\n  flex-direction: column;\n  display: flex;\n  flex-wrap: wrap;\n\n  @media ${p => p.theme.media.tablet} {\n    width: 704px;\n    flex-direction: row;\n    justify-content: space-between;\n  }\n  @media ${p => p.theme.media.desktop} {\n    width: 930px;\n    flex-wrap: nowrap;\n    gap: ${p => p.theme.space[4]}px;\n    margin-right: ${p => p.theme.space[7]}px;\n  }\n`;\n\nexport const StyledLabel = styled.label`\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.lineHeights.body};\n  color: ${p => p.theme.colors.notActiveText};\n  flex-wrap: wrap;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 100%;\n  @media ${p => p.theme.media.tablet} {\n    width: ${p => setSizeForMediaTablet(p.htmlFor)}px;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    width: ${p => setSizeForMediaDesktop(p.htmlFor)}px;\n  }\n`;\n\nexport const StyledField = styled(Field)`\n  width: 100%;\n  height: ${p => p.theme.space[6]}px;\n  margin-top: ${p => p.theme.space[3]}px;\n  outline: none;\n\n  box-shadow: ${p =>\n    p.name === 'title' && `inset ${p => p.theme.boxShadow.inputTitle}`};\n  border: ${({ name, theme }) => {\n    return name === 'title'\n      ? `${theme.borders.none}`\n      : `1px solid ${theme.colors.iconColor} `;\n  }};\n  background: ${p => p.name !== 'title' && `transparent`};\n\n  @media ${p => p.theme.media.tablet} {\n    width: ${p => setSizeForMediaTablet(p.name)}px;\n  }\n\n  @media ${p => p.theme.media.desktop} {\n    width: ${p => setSizeForMediaDesktop(p.name)}px;\n  }\n`;\nconst setSizeForMediaTablet = name => {\n  switch (name) {\n    case 'title':\n      return 704;\n    case 'author':\n      return 336;\n    default:\n      return 152;\n  }\n};\n\nconst setSizeForMediaDesktop = name => {\n  switch (name) {\n    case 'title':\n      return 346;\n    case 'author':\n      return 250;\n    default:\n      return 134;\n  }\n};\n\nexport const ButtonContainer = styled.div`\n  width: 170px;\n  height: 40px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { booksOperations } from 'redux/books';\nimport { Formik, ErrorMessage } from 'formik';\nimport { librarySchema } from 'validSchemas/librarySchema';\n\n// import { useTranslation } from 'react-i18next';\n// import { SpinnerCircular } from 'spinners-react';\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { ErrorContainer } from 'components/ErrorContainer/ErrorContainer.styled';\nimport { Button } from 'components/StyledButton/StyledButton ';\nimport {\n  StyledForm,\n  StyledLabel,\n  StyledField,\n  WrapperGroupOfInputs,\n  ButtonContainer,\n} from './BookAddForm.styled';\n\nexport const BookAddForm = ({ updateUi }) => {\n  const dispatch = useDispatch();\n  // const { t, i18n } = useTranslation();\n\n  //   onSubmit: async ({ title, author, year, pages }, { resetForm }) => {\n  //     if (year === '') {\n  //       await addBook({\n  //         title,\n  //         author,\n  //         pages,\n  //       })\n  //         .then(() => {\n  //           Notify.success(t('book__add__message1'));\n  //         })\n  //         .catch(error => {\n  //           Notify.error(t('book__add__message2'));\n  //         });\n  //     } else {\n  //       await addBook({\n  //         title,\n  //         author,\n  //         year,\n  //         pages,\n  //       })\n  //         .then(() => {\n  //           Notify.success(t('book__add__message1'));\n  //         })\n  //         .catch(error => {\n  //           Notify.error(t('book__add__message2'));\n  //         });\n  //     }\n  //     resetForm();\n  //     handleClickClose();\n  //   },\n  // });\n  const handleSubmit = (values, { resetForm }) => {\n    console.log(values);\n    resetForm();\n    dispatch(booksOperations.addBook(values));\n    updateUi(true);\n  };\n  const initialValues = {\n    title: '',\n    author: '',\n    year: '',\n    pages: '',\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={librarySchema}\n      onSubmit={handleSubmit}\n    >\n      <StyledForm autoComplete=\"off\">\n        <WrapperGroupOfInputs>\n          <StyledLabel htmlFor=\"title\">\n            Book title *\n            <StyledField\n              id=\"title\"\n              name=\"title\"\n              type=\"text\"\n              placeholder=\"...\"\n            />\n            <ErrorContainer>\n              <ErrorMessage name=\"title\" />\n            </ErrorContainer>\n          </StyledLabel>\n\n          <StyledLabel htmlFor=\"author\">\n            Author *\n            <StyledField\n              id=\"author\"\n              name=\"author\"\n              type=\"text\"\n              placeholder=\"...\"\n            />\n            <ErrorContainer>\n              <ErrorMessage name=\"author\" />\n            </ErrorContainer>\n          </StyledLabel>\n\n          <StyledLabel htmlFor=\"year\">\n            Publication date\n            <StyledField id=\"year\" name=\"year\" type=\"text\" placeholder=\"...\" />\n            <ErrorContainer>\n              <ErrorMessage name=\"year\" />\n            </ErrorContainer>\n          </StyledLabel>\n\n          <StyledLabel htmlFor=\"pages\">\n            Amount of pages *\n            <StyledField\n              id=\"pages\"\n              name=\"pages\"\n              type=\"text\"\n              placeholder=\"...\"\n            />\n            <ErrorContainer>\n              <ErrorMessage name=\"pages\" />\n            </ErrorContainer>\n          </StyledLabel>\n        </WrapperGroupOfInputs>\n        <ButtonContainer>\n          <Button type=\"submit\" textContent=\"Add\" size=\"175\" height=\"40\" />\n          <ErrorContainer />\n        </ButtonContainer>\n      </StyledForm>\n      {/* {isLoading && <p>Is Adding</p>} */}\n    </Formik>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { booksSelectors, booksOperations } from 'redux/books';\nimport { useLogOutRedirect } from 'hooks/useLogOutRedirect';\nimport { Info } from 'components/Info/Info';\nimport { BookAddForm } from 'components/BookAddForm/BookAddForm';\nimport { useMediaQuery } from 'react-responsive';\nimport { StyledContainer } from 'components/StyledContainer/StyledContainer.styled';\nimport { MobileLinkToSecondPage } from 'components/MobileLinkToSecondPage/MobileLinkToSecondPage';\nimport { LibBookTable } from 'components/LibBookTable/LibBookTable';\nimport { WrapperBody } from 'components/WrapperBody/WrapperBody.styled';\n\nexport const data = {\n  payload: {\n    books: [\n      {\n        status: 'haveRead',\n        _id: 1,\n        author: 'Гюго',\n        pages: 300,\n        title: 'Стааааааарий',\n        year: 1980,\n        rating: 2,\n        resume: '',\n      },\n      {\n        status: 'reading',\n        _id: 2,\n        author: 'J.K.Roling',\n        pages: 400,\n        title: 'Harry Potter',\n        year: 2014,\n        rating: 2,\n        resume: '',\n      },\n      {\n        status: 'toRead',\n        _id: 3,\n        author: 'Жуль Верн',\n        pages: 250,\n        title: '15-тирічний капітан',\n        year: 2008,\n        rating: 4,\n        resume: '',\n      },\n      {\n        status: 'haveRead',\n        _id: 4,\n        author: 'Жуль Верн',\n        pages: 250,\n        title: '15-ти    річний капітан',\n        year: 2008,\n        rating: 4,\n        resume: '',\n      },\n      {\n        status: 'reading',\n        _id: 5,\n        author: 'Жуль Верн',\n        pages: 250,\n        title:\n          '15-ти    річний капітан yyyyyyyy yygggggg gggggggggggggg gggfffffff fffffffffffffff fyyyyyyyyy yyyyyyyy yyyyyyyyyyy',\n        year: 2008,\n        rating: 5,\n        resume: '',\n      },\n    ],\n  },\n};\n\nconst Library = () => {\n  useLogOutRedirect();\n\n  const [updateUi, setUpdateUi] = useState(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(booksOperations.getBooks());\n  }, [dispatch, updateUi]);\n\n  const books = useSelector(booksSelectors.getBooksSelector);\n\n  const isMobileDevice = useMediaQuery({ query: '(max-width: 767px)' });\n\n  const isBookInLibrary = books.length > 0;\n  return (\n    <section>\n      <StyledContainer>\n        <WrapperBody>\n          {isMobileDevice ? (\n            <>\n              <MobileLinkToSecondPage to=\"/mobileLibBookTable\" />\n              <BookAddForm />\n            </>\n          ) : (\n            <>\n              <BookAddForm updateUi={setUpdateUi} />\n              {isBookInLibrary ? <LibBookTable data={books} /> : <Info />}\n            </>\n          )}\n        </WrapperBody>\n      </StyledContainer>\n    </section>\n  );\n};\nexport default Library;\n"],"names":["StyledLink","styled","Link","p","theme","colors","accentColor","MobileLinkToSecondPage","to","WrapperBody","backgroundBody","space","librarySchema","Yup","shape","title","max","matches","required","author","year","typeError","integer","min","Number","Date","getFullYear","pages","StyledForm","Form","media","table","desktop","WrapperGroupOfInputs","tablet","StyledLabel","fontWeights","normal","fontSizes","s","lineHeights","body","notActiveText","setSizeForMediaTablet","htmlFor","setSizeForMediaDesktop","StyledField","Field","name","boxShadow","inputTitle","borders","none","iconColor","ButtonContainer","BookAddForm","updateUi","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","console","log","booksOperations","autoComplete","id","type","placeholder","textContent","size","height","data","payload","books","status","_id","rating","resume","useLogOutRedirect","useState","setUpdateUi","useEffect","useSelector","booksSelectors","isMobileDevice","useMediaQuery","query","isBookInLibrary","length","LibBookTable","Info"],"sourceRoot":""}