{"version":3,"file":"static/js/492.9b41b3a3.chunk.js","mappings":"gNAGMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uZAWA,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,WAAnB,IASJ,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IACG,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,UAAUC,CAAtB,IACC,SAAAN,GAAC,OAAIA,EAAEC,MAAMM,YAAYC,MAAxB,IACP,SAAAR,GAAC,OAAIA,EAAEC,MAAMC,OAAOO,KAAnB,IAIDC,EAAmB,SAAC,GAAY,IAAVC,EAAS,EAATA,GACjC,OACE,SAACd,EAAD,CAAYc,GAAIA,EAAhB,UACE,iCAGL,C,0MC2DD,UAxE6B,YAC3BC,EAAAA,EAAAA,KACA,IAAQC,GAAMC,EAAAA,EAAAA,MAAND,EACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,IACpBC,GAAoBF,EAAAA,EAAAA,IAAYG,EAAAA,GAAAA,IAChCC,GAAiBC,EAAAA,EAAAA,eAAc,CAAEC,MAAO,uBAExCC,GAAgBP,EAAAA,EAAAA,IAAYQ,EAAAA,EAAAA,IAC5BC,GAAkBT,EAAAA,EAAAA,IAAYQ,EAAAA,EAAAA,IAC9BE,GAAoBV,EAAAA,EAAAA,IAAYQ,EAAAA,EAAAA,IACxBG,GAAeC,EAAAA,EAAAA,GAAUH,EAAkBC,GAAjDG,KACFC,EAA6B,KAApBL,EAAyB,EAAIE,EACtCI,EAAe,CACnB,CAAEC,MAAO,QAASC,KAAMxB,EAAE,iBAAkByB,OAAQX,EAAcY,QAClE,CAAEH,MAAO,OAAQC,KAAMxB,EAAE,gBAAiByB,OAAQJ,IAE9CM,EAA4Bb,EAAcc,QAC9C,SAACC,EAAeC,GAAhB,OAAyBD,EAAgBC,EAAKC,KAA9C,GACA,GAGIC,GACHvB,IAAkC,OAAbK,QAAa,IAAbA,OAAA,EAAAA,EAAeY,QAAS,GAAyB,KAApBV,EAerD,OACE,SAAC,IAAD,WACIP,IACA,UAAC,IAAD,CAAewB,MAAO,CAAEC,cAAe,SAAvC,WACE,SAAC,EAAAC,EAAD,CAAQC,UAAWd,KACnB,SAAC,IAAD,CACEhB,MAAOG,EAAoBH,EAAQQ,EACnCuB,kBAAiB5B,EACjB6B,UAAU7B,KAEZ,SAAC,IAAD,CACE8B,QAxBmB,WAC3BrC,EAASsC,EAAAA,GAAAA,2BAAoC,IAC7CtC,EACEuC,EAAAA,EAAAA,iBAA+B,CAC7BC,UAAWzB,EACX0B,WAAY3B,EACZV,MAAOQ,KAGXZ,EAAS0C,EAAAA,EAAAA,sBACTxC,EAAS,YAAa,CAAEyC,SAAS,GAClC,EAcSC,YAAa9C,EAAE,iBACf+C,QAAM,EACNC,KAAM,IACNC,UAAWjB,EACXkB,KAAK,YAEP,SAAC,IAAD,CACE9B,KAAMC,EACN8B,qBAAsBxB,EACtBe,UAAWzB,IAEZN,IACC,+BACE,SAAC,IAAD,CAAkBb,GAAG,oBAOlC,C","sources":["components/MobileLinkToForm/MobileLinkToForm.js","pages/MobileTrainBookTable .js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  position: fixed;\n  z-index: 99;\n  top: 85%;\n  left: 50vw;\n\n  transform: translate(-50%, 0);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  background: ${p => p.theme.colors.accentColor};\n  border: none;\n  width: 52px;\n  height: 52px;\n\n  border-radius: 50%;\n  line-height: 0;\n\n  span {\n    width: ${p => p.theme.space[4]}px;\n    font-size: ${p => p.theme.fontSizes.l};\n    font-weight: ${p => p.theme.fontWeights.normal};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n\nexport const MobileLinkToForm = ({ to }) => {\n  return (\n    <StyledLink to={to}>\n      <span>+</span>\n    </StyledLink>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\n\nimport { useLogOutRedirect } from 'hooks/useLogOutRedirect';\nimport { convertMs } from 'helpers/convertMs';\n\nimport {\n  selectedDatesSelectors,\n  selectedDatesActions,\n} from 'redux/selectedDates';\nimport { trainingSelectors, trainingThunk } from 'redux/training';\nimport { userSelectors, userThunk } from 'redux/auth';\n\nimport { LineChart } from 'components/LineChart/LineChart';\nimport { MyGoal } from 'components/MyGoal/MyGoal';\nimport { MobileLinkToForm } from 'components/MobileLinkToForm/MobileLinkToForm';\nimport { StyledContainer } from 'components/StyledContainer/StyledContainer.styled';\nimport { CenterFlexBox } from 'components/CenterFlexBox/CenterFlexBox';\nimport { BookTableMobile } from 'components/BookTableMobile/BookTableMobile';\nimport { Button } from 'components/StyledButton/StyledButton ';\n\nconst MobileTrainBookTable = () => {\n  useLogOutRedirect();\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const books = useSelector(trainingSelectors.booksList);\n  const isTrainingStarted = useSelector(userSelectors.isTrainingStarted);\n  const isMobileDevice = useMediaQuery({ query: '(max-width: 767px)' });\n\n  const selectedBooks = useSelector(selectedDatesSelectors.booksList);\n  const selectedEndDate = useSelector(selectedDatesSelectors.endDate);\n  const selectedStartDate = useSelector(selectedDatesSelectors.startDate);\n  const { days: prevPeriod } = convertMs(selectedEndDate - selectedStartDate);\n  const period = selectedEndDate === '' ? 0 : prevPeriod;\n  const myGoalParams = [\n    { param: 'books', text: t('amountOfBooks'), amount: selectedBooks.length },\n    { param: 'days', text: t('amountOfDays'), amount: period },\n  ];\n  const totalPagesInSelectedBooks = selectedBooks.reduce(\n    (previousValue, book) => previousValue + book.pages,\n    0\n  );\n\n  const isExistNoSaveTrainingDate =\n    !isTrainingStarted && selectedBooks?.length > 0 && selectedEndDate !== '';\n\n  const onStartTrainingClick = () => {\n    dispatch(userThunk.changeTrainingStatusThunk(true));\n    dispatch(\n      trainingThunk.addTrainingThank({\n        startDate: selectedStartDate,\n        finishDate: selectedEndDate,\n        books: selectedBooks,\n      })\n    );\n    dispatch(selectedDatesActions.resetSelectedDates());\n    navigate('/training', { replace: true });\n  };\n\n  return (\n    <StyledContainer>\n      {!isTrainingStarted && (\n        <CenterFlexBox style={{ paddingBottom: '100px' }}>\n          <MyGoal statistic={myGoalParams} />\n          <BookTableMobile\n            books={isTrainingStarted ? books : selectedBooks}\n            startedTraining={isTrainingStarted ? true : false}\n            training={isTrainingStarted ? false : true}\n          />\n          <Button\n            onClick={onStartTrainingClick}\n            textContent={t('startTraining')}\n            active\n            size={171}\n            disabled={!isExistNoSaveTrainingDate}\n            type=\"button\"\n          />\n          <LineChart\n            days={period}\n            totalPagesInTraining={totalPagesInSelectedBooks}\n            startDate={selectedStartDate}\n          />\n          {isMobileDevice && (\n            <>\n              <MobileLinkToForm to=\"/training\" />\n            </>\n          )}\n        </CenterFlexBox>\n      )}\n    </StyledContainer>\n  );\n};\nexport default MobileTrainBookTable;\n"],"names":["StyledLink","styled","Link","p","theme","colors","accentColor","space","fontSizes","l","fontWeights","normal","white","MobileLinkToForm","to","useLogOutRedirect","t","useTranslation","dispatch","useDispatch","navigate","useNavigate","books","useSelector","trainingSelectors","isTrainingStarted","userSelectors","isMobileDevice","useMediaQuery","query","selectedBooks","selectedDatesSelectors","selectedEndDate","selectedStartDate","prevPeriod","convertMs","days","period","myGoalParams","param","text","amount","length","totalPagesInSelectedBooks","reduce","previousValue","book","pages","isExistNoSaveTrainingDate","style","paddingBottom","M","statistic","startedTraining","training","onClick","userThunk","trainingThunk","startDate","finishDate","selectedDatesActions","replace","textContent","active","size","disabled","type","totalPagesInTraining"],"sourceRoot":""}